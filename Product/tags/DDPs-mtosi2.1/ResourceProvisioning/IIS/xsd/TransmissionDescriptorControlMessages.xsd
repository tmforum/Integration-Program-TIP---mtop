<?xml version="1.0" encoding="UTF-8"?>
<!-- mTOP DDP - OM ResourceProvisioning - Copyright TeleManagement Forum 2008 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/rp/xsd/tmdc/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:tmd="http://www.tmforum.org/mtop/nrf/xsd/tmd/v1" xmlns:tpdata="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:tp="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" xmlns:fdfr="http://www.tmforum.org/mtop/nrf/xsd/fdfr/v1" xmlns:mfd="http://www.tmforum.org/mtop/nrf/xsd/mfd/v1" xmlns:crcd="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:crmd="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" targetNamespace="http://www.tmforum.org/mtop/rp/xsd/tmdc/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
	<xsd:annotation>
		<xsd:documentation>
			<p>DDP: ResourceProvisioning</p>
			<p>Module:  Message XSD Module</p>
			<p>Description: This module contains the XML Schema type definitions of all the mTOP TransmissionDescriptorControl SI XML message structures.</p>
		</xsd:documentation>
	</xsd:annotation>
	<!-- ================ -->
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="../../../Framework/IIS/xsd/MessageDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayeredParameters.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayeredParameters.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/CommonTypes.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tmd/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Tmd.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/TpData.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Tp.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/mfd/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Mfd.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/fdfr/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Fdfr.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/CommonResourceCreateDataType.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/CommonResourceModifyDataType.xsd"/>
	<!-- ================ -->
	<xsd:element name="createTransmissionDescriptorRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the createTransmissionDescriptor operation</p>
				<p>This operation is used to create
         a new Transmission Descriptor on the server. A Transmission Descriptor 
         create data representing the new Transmission Descriptor is 
         passed as input. The resulting Transmission Descriptor is 
         returned as a result.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="newTmdCreateData" type="tns:TransmissionDescriptorCreateDataType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>information about the TMD to be created</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createTransmissionDescriptorResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the createTransmissionDescriptor operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="newTmd" type="tmd:TransmissionDescriptorType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The resulting TMD</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createTransmissionDescriptorException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the createTransmissionDescriptor operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:capacityExceeded"/>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:unableToComply"/>
						<xsd:element ref="msg:userlabelInUse"/>						
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="deleteTransmissionDescriptorRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the deleteTransmissionDescriptor operation</p>
				<p>This operation is used to 
         delete a Transmission Descriptor on the server. This operation is
         idempotent. If the service is called with the
         name of a non-existent Transmission Descriptor, it will succeed.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tmdName" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the TMD to be deleted</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deleteTransmissionDescriptorResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the deleteTransmissionDescriptor operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence/>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deleteTransmissionDescriptorException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the deleteTransmissionDescriptor operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:objectInUse"/>
						<xsd:element ref="msg:unableToComply"/>						
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="modifyTransmissionDescriptorRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the modifyTransmissionDescriptor operation</p>
				<p>This operation is used to modify a
         Transmission Descriptor (TMD) in the EMS.
         The resulting Transmission Descriptor is 
         returned as a result.</p>
				<p> When transmission parameters are modified, this will automatically 
         modify the corresponding parameters in all associated TPs/MFDs on a best 
         effort basis. TPs/MFDs whose parameters could not be modified shall be 
         returned by the EMS. </p>
				<p> Note: Only the modified parameters will be updated in the TPs/MFDs;
         i.e., the TMD parameter/value list may be inconsistent with the corresponding 
         parameter/value list of the associated TPs/MFDs.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tmdName" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the TMD to be modified</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="tmdModifyData" type="tns:TransmissionDescriptorModifyDataType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>information about the TMD to be modified</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of TPs with associated parameters to be applied</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="modifyTransmissionDescriptorResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the modifyTransmissionDescriptor operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of TPs with associated applied parameters</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="modifiedTmd" type="tmd:TransmissionDescriptorType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>result of the modification</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="failedMeRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>the names of all
             TMD associated MEs that could not be reached by the EMS</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="failedRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>the names of all
             TPs and MFDs that could not be changed to the new parameter values due to
             some error reasons</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="errorReason" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>In case a "best effort" parameter could not be set   
               an indication of the fault reason is provided by the EMS</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="modifyTransmissionDescriptorException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the modifyTransmissionDescriptor operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:unableToComply"/>						
						<xsd:element ref="msg:userlabelInUse"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="setTransmissionDescriptorAssociationRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the setTransmissionDescriptorAssociation operation</p>
				<p>This operation associates/un-associates a TransmissionDescriptor (TMD) 
         to/from a TP or MFD object.</p>
				<p>The association of a TMD to an an object
         by this operation amounts to a forced overwriting of the layered 
         transmission parameters of the object by the layered transmission 
         parameters of the TMD and to a forced overwriting of the additional info 
         parameters of the object by the additional TP info parameters of the TMD.</p>
				<p> When parameters of the TMD are already present as parameters of the 
         object,the current object parameter values are overwritten by the TMD 
         parameter values. When current parameters of the object are not present as 
         parameters of the TMD, the current parameters are left unchanged.</p>
				<p> An associated TMD is 
         un-associated when no name is provided for the transmissionDescriptorName 
         input parameter. The un-association of a TMD from an object has no effect 
         on the other parameters of the object, i.e. the other layered transmission
         parameters and additional info parameters of the object remain 
         unchanged.</p>
				<p> Consistency rules:<ol>
						<li> When a TMD is assigned to an object this assignment is called
         consistent if whenever a TMD transmission parameter is also present as an 
         object transmission parameter or a TMD additional TP info parameter is also 
         present as an object additional info parameter, the common parameters 
         of the TMD and object have the same values. </li>
						<li> The degree of consistency of a TMD assignment to an object 
         is determined by the TMD state of the object. </li>
					</ol>.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tmdName" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the TransmissionDescriptor to associate to the object. 
               NULL means that an associated TransmissionDescriptor has to be 
               un-associated from the object</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:choice>
					<xsd:annotation>
						<xsd:documentation>
							<p>The TP, MFD or FDFr object</p>
						</xsd:documentation>
					</xsd:annotation>
					<xsd:element name="tp" type="tp:TerminationPointType" minOccurs="0"/>
					<xsd:element name="mfd" type="mfd:MatrixFlowDomainType" minOccurs="0"/>
					<xsd:element name="fdfr" type="fdfr:FlowDomainFragmentType" minOccurs="0"/>
				</xsd:choice>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="setTransmissionDescriptorAssociationResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the setTransmissionDescriptorAssociation operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:choice>
				<xsd:annotation>
					<xsd:documentation>
						<p>The TP, MFD or FDFr object</p>
					</xsd:documentation>
				</xsd:annotation>
				<xsd:element name="tp" type="tp:TerminationPointType" minOccurs="0"/>
				<xsd:element name="mfd" type="mfd:MatrixFlowDomainType" minOccurs="0"/>
				<xsd:element name="fdfr" type="fdfr:FlowDomainFragmentType" minOccurs="0"/>
			</xsd:choice>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="setTransmissionDescriptorAssociationException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the setTransmissionDescriptorAssociation operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:unableToComply"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="verifyTransmissionDescriptorAssignmentRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the verifyTransmissionDescriptorAssignment operation</p>
				<p>This operation verifies the egress and/or ingress TMD state
         of the specified TP identified by tpName.</p>
				<p>According to the requested transmission direction it checks
         whether a TMD is assigned as egress and/or ingress TMD to the TP.
         If this is true it first verifies the existence of the assigned TMD(s)
         and then compares the transmission parameters of the TMD and TP,
         and the additional TP info parameters of the TMD with the additional
         info parameters of the TP.</p>
				<p>If a TMD parameter is not present as a TP parameter or is present but
         with a different value, this is called a "parameter mismatch", and the TMD
         state will take the value "mismatch".  The service returns the current
         TMD state and all mismatched transmission or additional TP info
         parameters of the TMD (which should mostly be none) as its output.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tpName" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>the TP whose TMD assignment(s) shall be verified</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="direction" type="com:DirectionalityType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>the direction for which the TMD assignment(s) of the TP shall be verified
             D_SOURCE refers to the egress TMD state, D_SINK refers to the ingress
             TMD state, D_BIDRECTIONAL refers to the egress and ingress TMD states,
             and D_NA is not allowed</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="verifyTransmissionDescriptorAssignmentResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the verifyTransmissionDescriptorAssignment operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tmdAssignmentState" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>the TMD state (s) of the TP
             as determined by the verification procedure;
             if both the egress and ingress TMD states are requested and their
             values are different, the concatenation of the egress TMD state
             with the ingress TMD state is returned, separated by a semicolon</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="lp:transmissionParametersList" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p> a "delta" list of mismatched TMD transmission parameters, or empty.
              See SD1-16_LayeredParameters.pdf  for more details</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="additionalTpInfo" type="gen:NameAndValueStringListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>a "delta" list of mismatched "additional TP info" parameters, or empty</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="verifyTransmissionDescriptorAssignmentException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the verifyTransmissionDescriptorAssignment operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:unableToComply"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:complexType name="TransmissionDescriptorCreateDataType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The attributes required for the creation of a transmission descriptor
           on the EMS are packaged together in a TMDCreateData structure which the NMS
           will pass to the EMS at TMD creation time. These are the read-create
           attributes of the TMD</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="crcd:CommonResourceCreateDataType">
				<xsd:sequence>
					<xsd:element ref="lp:transmissionParametersList" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>A list of traffic conditioning parameters which can be set and/or 
             retrieved at a specified connectionless layer on a Termination Point (TP) 
             having this TC Profile associated. Refer to chapter "Traffic Conditioning 
             Parameters" of the supporting document SD1-16_LayeredParameters.pdf
             for details of the currently defined connectionless parameters</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="additionalObjectInfo" type="gen:NameAndValueStringListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Additional info parameters which can be set 
                 on a TP or MFD by associating this TMD</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="containingTmdName" type="nam:NamingAttributeType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>The name of another TMD which is considered to contain this TMD.
               The semantics of the containment is that the TMD to be created shall
               inherit the layered transmission parameters and additional TP
               information from the containing TMD</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="externalRepresentationReference" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>A means to store at the EMS a reference to the external representation
                 of the TMD (e.g., an XML file name).  The contents of this
                 attribute is opaque at the NML-EML interface and not utilized</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ================ -->
	<xsd:complexType name="TransmissionDescriptorModifyDataType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The attributes required for the modification of a transmission descriptor
         on the EMS are packaged together in a TMDModifyData structure which the NMS
         will pass to the EMS</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="crmd:CommonResourceModifyDataType">
				<xsd:sequence>
					<xsd:element ref="lp:transmissionParametersList" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>A list of traffic conditioning parameters which can be set and/or 
             retrieved at a specified connectionless layer on a Termination Point (TP) 
             having this TC Profile associated. Refer to chapter "Traffic Conditioning 
             Parameters" of the supporting document SD1-16_LayeredParameters.pdf
             for details of the currently defined connectionless parameters</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="additionalObjectInfo" type="gen:NameAndValueStringListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Additional info parameters which can be set 
                 on a TP or MFD by associating this TMD</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="containingTmdName" type="nam:NamingAttributeType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>The name of another TMD which is considered to contain this TMD.
               The semantics of the containment is that the TMD to be created shall
               inherit the layered transmission parameters and additional TP
               information from the containing TMD</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="externalRepresentationReference" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>A means to store at the EMS a reference to the external representation
                 of the TMD (e.g., an XML file name).  The contents of this
                 attribute is opaque at the NML-EML interface and not utilized</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
