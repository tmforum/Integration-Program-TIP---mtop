<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="tmf854.v1" targetNamespace="tmf854.v1" attributeFormDefault="unqualified" elementFormDefault="qualified">
<!--  ======= All includes  ======= --> 
  <xsd:include schemaLocation="globalDefinitions.xsd" /> 
<!--  ======== Service Types ========= --> 
<xsd:simpleType name="ServiceTypeEnumType">
  <xsd:restriction base="xsd:string">
  <xsd:enumeration value="DATA" /> 
  <xsd:enumeration value="VIDEO" /> 
  <xsd:enumeration value="POTS" /> 
  <xsd:enumeration value="DATA_VIDEO" /> 
  </xsd:restriction>
  </xsd:simpleType>
<!--  ================= --> 
<xsd:complexType name="ServiceTypeType">
 <xsd:simpleContent>
  <xsd:extension base="ServiceTypeEnumType">
  <xsd:attribute name="overlap" type="xsd:string" use="optional" /> 
  <xsd:attribute name="qualifier" type="xsd:string" use="optional" /> 
  </xsd:extension>
  </xsd:simpleContent>
  </xsd:complexType>
<!--  =========Name-Type-Value Lists====== --> 
<xsd:complexType name="NameAndTypedValue">
  <xsd:sequence>
  <xsd:element name="name" type="xsd:string" /> 
  <xsd:element name="type" type="xsd:string" /> 
  <xsd:element name="value" type="xsd:string" /> 
  </xsd:sequence>
</xsd:complexType>
<xsd:complexType name="PackageOfNameAndTypedValues">
  <xsd:sequence maxOccurs="unbounded">
  <xsd:choice>
  <xsd:element name="value" type="NameAndTypedValue" /> 
  <xsd:element name="package" type="PackageOfNameAndTypedValues" /> 
  </xsd:choice>
  </xsd:sequence>
  <xsd:attribute name="name" type="xsd:string" /> 
 </xsd:complexType>
<xsd:complexType name="NTVListType">
 <xsd:sequence maxOccurs="unbounded">
 <xsd:choice>
  <xsd:element name="value" type="NameAndTypedValue" /> 
  <xsd:element name="package" type="PackageOfNameAndTypedValues" /> 
  </xsd:choice>
  </xsd:sequence>
</xsd:complexType>
<!--  ========= SM_ServiceType Declaration ======== --> 
<xsd:complexType name="SM_ServiceType">
  <xsd:annotation>
  <xsd:documentation>A Service represents a resource facing service which is visible over the MTOSI Service ComponentActivation infterface</xsd:documentation> 
  </xsd:annotation>
  <xsd:sequence>
  <xsd:element name="name" type="NamingAttributeType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>Unique identification on CCV.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="discoveredName" type="DiscoveredNameType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>The name represents the service is referred to on EMS displays.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
   <xsd:element name="namingOS" type="NamingOSType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>OS name.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="userLabel" type="UserLabelType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>User Label</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="owner" type="OwnerType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>Identifier for the owner of the object. Refer to the type definition for more details.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="serviceName" type="ServiceNameType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>Unique name of the service.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
   <xsd:element name="id" type="xsd:integer" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>Service Id</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="description" type="DescriptionType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>Service description</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="serviceState" type="SM_ServiceStateType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>Service state of the service itself. Get the service state of the resource through the object representing the resource.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="administrativeState" type="AdministrativeStateType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>Administrative state of the service.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="operationalState" type="OperationalStateType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>Operational state.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="serviceTemplateName" type="NamingAttributeListType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>Ref. to service template.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="serviceType" type="ServiceTypeType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>Type of service being created.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="subscribers" type="SubscribersType" nillable="true" minOccurs="0" maxOccurs="unbounded">
  <xsd:annotation>
  <xsd:documentation>List of subscribers, where each subscriber is identified by partyRole -> customer. See UML and SID XSD.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="serviceAccessPoints" type="NamingAttributeListType" nillable="true" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>List of associated service access points.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="serviceCharacteristics" type="NTVListType" nillable="true" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>List of variant service chars.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  </xsd:sequence>
  <xsd:attribute name="extVersion" type="xsd:string" use="optional" /> 
  <xsd:attribute name="extAuthor" type="xsd:string" use="optional" /> 
  <xsd:attribute name="tmf854Version" type="TMF854_VersionType" use="optional" /> 
  </xsd:complexType>
 <!--  ================= --> 
  <xsd:simpleType name="SM_ServiceStateType">
  <xsd:restriction base="xsd:string">
  <xsd:enumeration value="ACTIVATED" /> 
  <xsd:enumeration value="DEACTIVATED" /> 
  <xsd:enumeration value="SUSPENDED" /> 
  </xsd:restriction>
  </xsd:simpleType>
<!--  ================= --> 
 <xsd:simpleType name="OperationalStateType">
  <xsd:restriction base="xsd:string">
  <xsd:enumeration value="ENABLED" /> 
  <xsd:enumeration value="DISABLED" /> 
  </xsd:restriction>
  </xsd:simpleType>
 <!--  ================= --> 
  <xsd:simpleType name="ServiceNameType">
  <xsd:restriction base="xsd:string" /> 
  </xsd:simpleType>
<!--  ========= SubscribersType Declaration ======== --> 
 <xsd:complexType name="SubscribersType">
  <xsd:annotation>
  <xsd:documentation>List of subscribers</xsd:documentation> 
  </xsd:annotation>
  <xsd:sequence>
  <xsd:element name="subscriberId" type="xsd:integer" /> 
  <xsd:element name="subscriberInfo" type="xsd:string" /> 
  </xsd:sequence>
  <xsd:attribute name="extVersion" type="xsd:string" use="optional" /> 
  <xsd:attribute name="extAuthor" type="xsd:string" use="optional" /> 
  <xsd:attribute name="tmf854Version" type="TMF854_VersionType" use="optional" /> 
  </xsd:complexType>
 <!--  =================  --> 
 <xsd:simpleType name="DescriptionType">
  <xsd:restriction base="xsd:string" /> 
  </xsd:simpleType>
<!--  ========= SM_ServiceTemplateType ======== --> 
 <xsd:complexType name="SM_ServiceTemplateType">
 <xsd:annotation>
  <xsd:documentation>A Service template defines invariant characteristics of a service, and can be thought of as an entity from which different service instances can be instantiated.</xsd:documentation> 
  </xsd:annotation>
 <xsd:sequence>
  <xsd:element name="name" type="NamingAttributeType" minOccurs="0">
  <xsd:annotation>
  <xsd:documentation>Unique identification on CCV.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  <xsd:element name="discoveredName" type="DiscoveredNameType" minOccurs="0">
 <xsd:annotation>
  <xsd:documentation>The name represents the service template is referred to on EMS displays.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
<xsd:element name="namingOS" type="NamingOSType" minOccurs="0">
 <xsd:annotation>
  <xsd:documentation>OS name.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
 <xsd:element name="id" type="xsd:integer" minOccurs="0">
 <xsd:annotation>
  <xsd:documentation>Template Id.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
 <xsd:element name="description" type="DescriptionType" minOccurs="0">
 <xsd:annotation>
  <xsd:documentation>Service template description.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
 <xsd:element name="version" type="VersionType" minOccurs="0">
 <xsd:annotation>
  <xsd:documentation>Service template version</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
 <xsd:element name="type" type="ServiceTypeType" minOccurs="0">
 <xsd:annotation>
  <xsd:documentation>Type of service associated to template.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
 <xsd:element name="serviceSpecCharacteristics" type="NTVListType" nillable="true" minOccurs="0">
 <xsd:annotation>
  <xsd:documentation>List of invariant service characteristics.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  </xsd:sequence>
  <xsd:attribute name="extVersion" type="xsd:string" use="optional" /> 
  <xsd:attribute name="extAuthor" type="xsd:string" use="optional" /> 
  <xsd:attribute name="tmf854Version" type="TMF854_VersionType" use="optional" /> 
  </xsd:complexType>
 <!--  ========= ServiceFilterType ======== --> 
 <xsd:complexType name="ServiceFilterType">
 <xsd:sequence>
 <xsd:element maxOccurs="unbounded" minOccurs="0" name="baseInstance" type="NamingAttributeType">
 <xsd:annotation>
  <xsd:documentation>This attribute identifies the list of base object instances for the subtrees to be retrieved. For service inventory, this will be a list of management domains. If the BaseInstanceList is left empty then all the nodes at the top of the MTOSI instance tree are selected (i.e., all MDs, TMDs, and OSs are selected). Specification of the BaseInstanceList does not select any objects in and of itself. In order to select specific objects, one needs to specify the IncludedObjectTypes.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
 <xsd:element maxOccurs="unbounded" minOccurs="0" name="includedObjectType">
 <xsd:annotation>
  <xsd:documentation>This attribute identifies the type of objects contained under the selected base object instances that are to be included in the returned inventory. The base object itself is included only if the type of the base instance appears in the IncludedObjectTypes list. If no included object types are listed, then the entire subtree under the base object instance is returned. For each included object type, one needs to indicate whether just the name, all the associated attributes (including the name), or the associated attributes and relationship pointers are to be returned for each instance. The IncludedObjectTypes need to be picked such that each selected base class has a single (connected) subtree below it. For example, if all the EHs under a given MD where needed, the requesting OS would need to list the given MD as a base instance and put ME and EH in the IncludedObjectTypes list. The requesting OS could just request the names of the MEs to reduce the size of the returned file.</xsd:documentation> 
  </xsd:annotation>
 <xsd:complexType>
 <xsd:sequence>
 <xsd:element name="objectType" type="ServiceObjectAcronymType" minOccurs="0">
<xsd:annotation>
  <xsd:documentation>This is an object type acronym list. The following acronyms are supported: SE (for SM_Service objects) and SET (SM_ServiceTemplate objects).</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
<xsd:element name="serviceType" type="ServiceTypeType" minOccurs="0">
<xsd:annotation>
  <xsd:documentation>To indicate the service type.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
<xsd:element name="objectName" type="NamingAttributeType" minOccurs="0">
<xsd:annotation>
  <xsd:documentation>To indicate the FDN of a specific object.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
 <xsd:element name="granularity" type="GranularityType" minOccurs="0">
 <xsd:annotation>
  <xsd:documentation>Specify the granularity of the inventory report. Also used by the SimpleFilterType. The possible valid values are NAMES, ATTRS and FULL. For AMS Gateway 2.0.0, ATTRS shall be used (i.e. all the attributes) regardless of what is specified in the filter itself. That is to say, as long as the granularity field has a valid value specified, then the request shall be attempted, and the value shall be assumed to be ATTRS even if it is not.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  </xsd:sequence>
  </xsd:complexType>
  </xsd:element>
  </xsd:sequence>
  <xsd:attribute name="extVersion" type="xsd:string" use="optional" /> 
  <xsd:attribute name="extAuthor" type="xsd:string" use="optional" /> 
  <xsd:attribute name="tmf854Version" type="TMF854_VersionType" use="optional" /> 
  </xsd:complexType>
 <!--  ========= ServiceObjectAcronymType Declaration ========  --> 
 <xsd:complexType name="ServiceObjectAcronymType">
 <xsd:annotation>
  <xsd:documentation>List of ServiceObjectAcronymEnumType objects.</xsd:documentation> 
  </xsd:annotation>
 <xsd:sequence>
  <xsd:element name="serviceObjectAcronyms" type="ServiceObjectAcronymEnumType" minOccurs="0" maxOccurs="unbounded" /> 
  </xsd:sequence>
  <xsd:attribute name="extVersion" type="xsd:string" use="optional" /> 
  <xsd:attribute name="extAuthor" type="xsd:string" use="optional" /> 
  <xsd:attribute name="tmf854Version" type="TMF854_VersionType" use="optional" /> 
  </xsd:complexType>
 <!--  ================= --> 
 <xsd:simpleType name="ServiceObjectAcronymEnumType">
 <xsd:restriction base="xsd:string">
  <xsd:enumeration value="SE" /> 
  <xsd:enumeration value="SET" /> 
  </xsd:restriction>
  </xsd:simpleType>
<!--  ========= ServiceInventoryType ======== --> 
 <xsd:complexType name="ServiceInventoryType">
 <xsd:annotation>
  <xsd:documentation>List of objects that satisfy the input parameter, which can be of any of the following types: SM_ServiceType or SM_ServiceTemplateType. This list may be empty.</xsd:documentation> 
  </xsd:annotation>
 <xsd:sequence>
 <xsd:element name="serviceList" type="SM_ServiceListType">
 <xsd:annotation>
  <xsd:documentation>The list of the SM_ServiceType objects.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
 <xsd:element name="serviceTemplateList" type="SM_ServiceTemplateListType">
 <xsd:annotation>
  <xsd:documentation>The list of the SM_ServiceTemplateType objects.</xsd:documentation> 
  </xsd:annotation>
  </xsd:element>
  </xsd:sequence>
  <xsd:attribute name="extVersion" type="xsd:string" use="optional" /> 
  <xsd:attribute name="extAuthor" type="xsd:string" use="optional" /> 
  <xsd:attribute name="tmf854Version" type="TMF854_VersionType" use="optional" /> 
  </xsd:complexType>
 <!--  ========= SM_ServiceListType Declaration ========  --> 
 <xsd:complexType name="SM_ServiceListType">
 <xsd:annotation>
  <xsd:documentation>List of SM_ServiceType objects.</xsd:documentation> 
  </xsd:annotation>
  <xsd:sequence>
  <xsd:element name="services" type="SM_ServiceType" minOccurs="0" maxOccurs="unbounded" /> 
  </xsd:sequence>
  <xsd:attribute name="extVersion" type="xsd:string" use="optional" /> 
  <xsd:attribute name="extAuthor" type="xsd:string" use="optional" /> 
  <xsd:attribute name="tmf854Version" type="TMF854_VersionType" use="optional" /> 
  </xsd:complexType>
<!--  ========= SM_ServiceListType Declaration ======== --> 
 <xsd:complexType name="SM_ServiceTemplateListType">
 <xsd:annotation>
  <xsd:documentation>List of SM_ServiceTemplateType objects.</xsd:documentation> 
  </xsd:annotation>
 <xsd:sequence>
  <xsd:element name="serviceTemplates" type="SM_ServiceTemplateType" minOccurs="0" maxOccurs="unbounded" /> 
  </xsd:sequence>
  <xsd:attribute name="extVersion" type="xsd:string" use="optional" /> 
  <xsd:attribute name="extAuthor" type="xsd:string" use="optional" /> 
  <xsd:attribute name="tmf854Version" type="TMF854_VersionType" use="optional" /> 
  </xsd:complexType>
  </xsd:schema>