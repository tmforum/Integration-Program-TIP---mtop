<?xml version="1.0" encoding="UTF-8"?>
<!-- mTOP DDP - OM ManageResourceInventory - Copyright TeleManagement Forum 2007 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.tmforum.org/mtop/mri/xsd/fdr/v1" xmlns:tns="http://www.tmforum.org/mtop/mri/xsd/fdr/v1" xmlns:fd="http://www.tmforum.org/mtop/nrf/xsd/fd/v1" xmlns:fdfr="http://www.tmforum.org/mtop/nrf/xsd/fdfr/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:tpdata="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1"  attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: ManageResourceInventory</p>
      <p>Module: Message XSD Module</p>
      <p>Description: This module contains the XML Schema type definitions of all the mTOP FlowDomainRetrieval SI XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>

  <!-- ================ -->
  <xsd:import schemaLocation="../../../Framework/IIS/xsd/MessageDefinitions.xsd" namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1"/>
  <xsd:import schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd" namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1"/>
  <xsd:import schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd" namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Fd.xsd" namespace="http://www.tmforum.org/mtop/nrf/xsd/Fd/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Fdfr.xsd" namespace="http://www.tmforum.org/mtop/nrf/xsd/Fdfr/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Cc.xsd" namespace="http://www.tmforum.org/mtop/nrf/xsd/cc/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/CommonTypes.xsd" namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/TpData.xsd" namespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayerRates.xsd" namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayeredParameters.xsd" namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1"/>

  <!-- ================ -->
  <xsd:element name="getAllAssociatedMfdsRequest" type="tns:getAllAssociatedMfdsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAllAssociatedMfds operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getAllAssociatedMfdsResponse" type="tns:getAllAssociatedMfdsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAllAssociatedMfds operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getAllAssociatedMfdsException" type="tns:ExceptionProfile3Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAllAssociatedMfds operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getAllFdFrsRequest" type="tns:getAllFdfrsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAllFdfrs operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getAllFdFrsResponse" type="tns:getAllFdfrsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAllFdfrs operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getAllFdFrsException" type="tns:ExceptionProfile3Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAllFdfrs operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getAllFlowDomainsRequest" type="tns:getAllFlowDomainsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAllFlowDomains operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getAllFlowDomainsResponse" type="tns:getAllFlowDomainsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAllFlowDomains operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getAllFlowDomainsException" type="tns:ExceptionProfile3Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAllFlowDomains operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getAllSupportedMfdsRequest" type="tns:getAllSupportedMfdsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAllSupportedMfds operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getAllSupportedMfdsResponse" type="tns:getAllSupportedMfdsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAllSupportedMfds operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <xsd:element name="getAllSupportedMfdsException" type="tns:ExceptionProfile3Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAllSupportedMfds operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getAssigningMfdRequest" type="tns:getAssigningMfdRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAssigningMfd operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getAssigningMfdResponse" type="tns:getAssigningMfdResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAssigningMfd operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getAssigningMfdException" type="tns:ExceptionProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAssigningMfd operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getAssociatingFdRequest" type="tns:getAssociatingFdRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAssociatingFd operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getAssociatingFdResponse" type="tns:getAssociatingFdResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAssociatingFd operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getAssociatingFdException" type="tns:ExceptionProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAssociatingFd operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getFdFrRequest" type="tns:getFdfrRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getFdfr operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFdFrResponse" type="tns:getFdfrResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getFdfr operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFdFrException" type="tns:ExceptionProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getFdfr operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getFdFrRouteRequest" type="tns:getFdfrRouteRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getFdfrRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFdFrRouteResponse" type="tns:getFdfrRouteResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getFdfrRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFdFrRouteException" type="tns:ExceptionProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getFdfrRoute operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getFdFrsByUserLabelRequest" type="tns:getFdfrsByUserLabelRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getFdfrsByUserLabel operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFdFrsByUserLabelResponse" type="tns:getFdfrsByUserLabelResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getFdfrsByUserLabel operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFdFrsByUserLabelException" type="tns:ExceptionProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getFdfrsByUserLabel operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getFdFrsWithTPRequest" type="tns:getFdfrsWithTPRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getFdfrsWithTp operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFdFrsWithTPResponse" type="tns:getFdfrsWithTPResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getFdfrsWithTp operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFdFrsWithTPException" type="tns:ExceptionProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getFdfrsWithTp operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getFlowDomainRequest" type="tns:getFlowDomainRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getFlowDomain operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFlowDomainResponse" type="tns:getFlowDomainResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getFlowDomain operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFlowDomainException" type="tns:ExceptionProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getFlowDomain operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getFlowDomainsByUserLabelRequest" type="tns:getFlowDomainsByUserLabelRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getFlowDomainsByUserLabel operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFlowDomainsByUserLabelResponse" type="tns:getFlowDomainsByUserLabelResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getFlowDomainsByUserLabel operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getFlowDomainsByUserLabelException" type="tns:ExceptionProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getFlowDomainsByUserLabel operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getMfdRequest" type="tns:getMfdRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getMfd operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getMfdResponse" type="tns:getMfdResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getMfd operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getMfdException" type="tns:ExceptionProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getMfd operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  
  <!-- ================ -->
  <xsd:element name="getTransmissionParamsRequest" type="tns:getTransmissionParamsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getTransmissionParams operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getTransmissionParamsResponse" type="tns:getTransmissionParamsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getTransmissionParams operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <xsd:element name="getTransmissionParamsException" type="tns:ExceptionProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getTransmissionParams operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>

  <!-- ===================== getAllFlowDomains Request/Response Messages ========= -->
  <xsd:complexType name="getAllFlowDomainsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This method allows an NMS to request a list of the flow domains
        that exist in the EMS.
        Raises globaldefs::ProcessingFailureException 
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure
      </xsd:documentation>
    </xsd:annotation>
  </xsd:complexType>

  <xsd:complexType name="getAllFlowDomainsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getAllFlowDomains operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="flowDomains" type="fd:FdListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            List of flowDomains.
          </xsd:documentation>
        </xsd:annotation>   
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <!-- ===================== getFlowDomainsByUserLabel Request/Response Messages ========= -->
  <xsd:complexType name="getFlowDomainsByUserLabelRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This method allows an NMS to request a list of the flow domains
        for a specified userLabel
        Raises globaldefs::ProcessingFailureException 
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="userLabel" type="gen:UserLabelType">
        <xsd:annotation>
          <xsd:documentation>
            UserLabel of the FlowDomain
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
    <xsd:attribute name="extVersion" type="xsd:string" use="optional"/>
    <xsd:attribute name="extAuthor" type="xsd:string" use="optional"/>
    <xsd:attribute name="tmf854Version" type="TMF854_VersionType" use="optional"/>
  </xsd:complexType>

  <xsd:complexType name="getFlowDomainsResponseByUserLabelType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getFlowDomainsByUserLabel operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="flowDomains" type="fd:FdListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            List of flowDomains.
          </xsd:documentation>
        </xsd:annotation>   
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <!-- ===================== getFlowDomain Request/Response Messages ========= -->
  <xsd:complexType name="getFlowDomainRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This method allows an NMS to request a flow domain
        Raises globaldefs::ProcessingFailureException 
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fdName" type="nam:NamingAttributesType">
        <xsd:annotation>
          <xsd:documentation>
            Name of the FlowDomain
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getFlowDomainResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getFlowDomain operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="flowDomain" type="fd:FlowDomainType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            Flow Domain Structure returned.
          </xsd:documentation>
        </xsd:annotation>   
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <!-- ===================== getAssociatingFd Request/Response Messages ========= -->
  <xsd:complexType name="getAssociatingFdRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This operation returns the flow domain structure for the (single) flow domain
        that the Matrix Flow Domain that is supplied as a parameter is associated to.
        Raises globaldefs::ProcessingFailureException 
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="mfdName" type="nam:NamingAttributesType">
        <xsd:annotation>
          <xsd:documentation>
            Name of the Mfd
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getAssociatingFdResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getAssociatingFd operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="flowDomain" type="fd:FlowDomainType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            The flow domain that the Matrix Flow Domain is associated to.
          </xsd:documentation>
        </xsd:annotation>   
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

<!-- ===================== getTransmissionParams Request/Response Messages ========= -->
  <xsd:complexType name="getTransmissionParamsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This service returns the transmission parameters of a flow domain,
        matrix flow domain, flow domain fragment or transmission descriptor,
        given the name of the object.
        A set of groups of transmission parameters to be returned may be specified.
        Raises globaldefs::ProcessingFailureException 
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure
        EXCPT_INVALID_INPUT - Raised when ellName does not reference an encapsulation layer link object
        EXCPT_ENTITY_NOT_FOUND - Raised when ellName references a encapsulation layer link object that does not exist
        EXCPT_NE_COMM_LOSS - Raised when communcation is lost to a managed element
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="name" type="nam:NamingAttributesType">
        <xsd:annotation>
          <xsd:documentation>
            Name of the managed element, equipment, transmission descriptor or flow domain.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getTransmissionParamsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getTransmissionParams operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="transmissionParams" type="lp:LayerParameterListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            A list or requested transmission parameters. For a flow domain fragment only one layer is contained by the list.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

<!-- ===================== getAllAssociatedMfds Request/Response Messages ========= -->
  <xsd:complexType name="getAllAssociatedMfdsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This service allows an NMS to request a list of matrix flow domains
        that are contained by a specified managed element or associated
        with a specified equipment, transmission descriptor or flow domain.
        Raises globaldefs::ProcessingFailureException 
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure
        EXCPT_INVALID_INPUT - Raised when ellName does not reference an encapsulation layer link object
        EXCPT_ENTITY_NOT_FOUND - Raised when ellName references a encapsulation layer link object that does not exist
        EXCPT_NE_COMM_LOSS - Raised when communcation is lost to a managed element
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="holderName" type="nam:NamingAttributesType">
        <xsd:annotation>
          <xsd:documentation>
            Name of the managed element, equipment, transmission descriptor or flow domain.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getAllAssociatedMfdsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getAllAssociatedMfds operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="mfds" type="fd:MfdListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            Retrieved Mfds with the name as specified in input.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

<!-- ===================== getAllSupportedMfds Request/Response Messages ========= -->
  <xsd:complexType name="getAllSupportedMfdsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This service allows an NMS to request a list of matrix flow domains
        that are contained by a specified managed element or supported
        with a specified equipment.
        Raises globaldefs::ProcessingFailureException 
        EXCPT_NOT_IMPLEMENTED - Raised if the entire request is not supported 
        by the EMS or the request with the specified input parameters 
        is not supported.
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal 
        failure
        EXCPT_INVALID_INPUT - Raised when holderName does not reference a 
        managed element or equipment object
        EXCPT_ENTITY_NOT_FOUND - Raised when holderName references an object that
        does not exist
        EXCPT_NE_COMM_LOSS - Raised when communcation is lost to a managed element
        involved in this operation
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="holderName" type="nam:NamingAttributesType">
        <xsd:annotation>
          <xsd:documentation>
            Name of the managed element, equipment, transmission descriptor or flow domain.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getAllSupportedMfdsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getAllSupportedMfds operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="mfds" type="fd:MfdListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            Retrieved Mfds with the name as specified in input.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

<!-- ===================== getMfd Request/Response Messages ========= -->
  <xsd:complexType name="getMfdRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This service returns a matrix flow domain given a matrix flow domain name.
        Raises globaldefs::ProcessingFailureException 
        EXCPT_NOT_IMPLEMENTED - Raised if the entire request is not supported 
        by the EMS or the request with the specified input parameters 
        is not supported.
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal 
        failure
        EXCPT_INVALID_INPUT - Raised when mfdName does not reference a 
        matrix flow domain object
        EXCPT_ENTITY_NOT_FOUND - Raised when mfdName references a 
        matrix flow domain object that does not exist
        EXCPT_NE_COMM_LOSS - Raised when communication is lost to a managed element
        involved in this operation
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="mfdName" type="fd:NamingAttributesType">
        <xsd:annotation>
          <xsd:documentation>
            Name of the matrix flow domain to retrieve.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getMfdResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getMfd operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="mfd" type="fd:MatrixFlowDomainType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            Matrix flow domain structure returned.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

<!-- ===================== getAssigningMfd Request/Response Messages ========= -->
  <xsd:complexType name="getAssigningMfdRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This service returns the matrix flow domain to which is assigned
        a given "CPTP" termination point.
        Raises globaldefs::ProcessingFailureException 
        EXCPT_NOT_IMPLEMENTED - Raised if the entire request is not supported 
        by the EMS or the request with the specified input parameters 
        is not supported.
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal 
        failure
        EXCPT_INVALID_INPUT - Raised when cptpName does not reference a 
        CPTP termination point
        EXCPT_ENTITY_NOT_FOUND - Raised when cptpName references a 
        CPTP termination point object that does not exist
        EXCPT_NE_COMM_LOSS - Raised when communication is lost to a managed element
        involved in this operation
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="cptpName" type="nam:NamingAttributesType">
        <xsd:annotation>
          <xsd:documentation>
            Name of the CPTP termination point to which the Mfd is assigned.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getAssigningMfdResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getAssigningMfd operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="mfd" type="fd:MatrixFlowDomainType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            Matrix flow domain structure returned.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

<!-- ===================== getAllFdFrs Request/Response Messages ========= -->
  <xsd:complexType name="getAllFdFrsRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This allows an NMS to request a list of flow domain fragments for the    
        specified flow domain at the specified connectivityRates
        Raises globaldefs::ProcessingFailureException 
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure
        EXCPT_INVALID_INPUT - Raised when ellName does not reference an encapsulation layer link object
        EXCPT_ENTITY_NOT_FOUND - Raised when ellName references a encapsulation layer link object that does not exist
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fdName" type="nam:NamingAttributesType">
        <xsd:annotation>
          <xsd:documentation>
            Name of the flow domain 
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    <xsd:element name="connectivityRateList" type="lay:ayerRateListType">
        <xsd:annotation>
          <xsd:documentation>
            List of rates of the flow domain fragments to be reported.
            If an empty list is specified, then all flow domain fragments of all 
            rates are to be reported
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getAllFdFrsResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getAllFdFrs operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fdfrList" type="fdfr:FdFrListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            Retrieved FdFrList with the name as specified in input.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

<!-- ===================== getFdFrsWithTP Request/Response Messages ========= -->
  <xsd:complexType name="getFdFrsWithTPRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This service allows the NMS to request from the EMS the flow domain
        fragments that are connected to a specified flow point or CPTP. In case
        of a flow point as input parameter not more then one flow domain fragment
        will be returned.
        Raises globaldefs::ProcessingFailureException
        EXCPT_NOT_IMPLEMENTED - Raised if the entire request is not supported 
        by the EMS or the request with the specified input parameters 
        is not supported.
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal 
        failure
        EXCPT_INVALID_INPUT - Raised when tpName does not reference a flow point
        or CPTP
        EXCPT_ENTITY_NOT_FOUND - Raised tpName references an object that does not
        exist
        EXCPT_NE_COMM_LOSS - Raised when communication is lost to a managed element
        involved in this operation
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="tpName" type="nam:NamingAttributesType">
        <xsd:annotation>
          <xsd:documentation>
            The name of the flow point or CPTP for which the connected flow
            domain fragments shall be returned.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getFdFrsWithTPResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getFdFrsWithTP operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fdfrList" type="fdfr:FdFrListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            Retrieved FdFrList with the termination point name as specified in input.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

<!-- ===================== getFdFrsByUserLabel Request/Response Messages ========= -->
  <xsd:complexType name="getFdFrsByUserLabelRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This operation returns the flow domain fragment structures for the
        flow domain fragments whose userLabel is supplied as a parameter.
        Raises globaldefs::ProcessingFailureException
        EXCPT_NOT_IMPLEMENTED - Raised if the entire request is not supported 
        by the EMS or the request with the specified input parameters 
        is not supported.
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal 
        failure
        EXCPT_NE_COMM_LOSS - Raised when communication is lost to a managed element
        involved in this operation
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="userLabel" type="gen:UserLabelType">
        <xsd:annotation>
          <xsd:documentation>
            The user label of the flow domain fragments to retrieve.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getFdFrsByUserLabelResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getFdFrsByUserLabel operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fdfrList" type="fdfr:FdFrListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            Retrieved FdFrList with the userLabel as specified in input.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

<!-- ===================== getFdFr Request/Response Messages ========= -->
  <xsd:complexType name="getFdFrRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This operation returns the flow domain fragment structure 
        for the flow domain fragment whose name is supplied as a parameter
        Raises globaldefs::ProcessingFailureException 
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal failure
        EXCPT_INVALID_INPUT - Raised when ellName does not reference an encapsulation layer link object
        EXCPT_ENTITY_NOT_FOUND - Raised when ellName references a encapsulation layer link object that does not exist
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fdfrName" type="nam:NamingAttributesType">
        <xsd:annotation>
          <xsd:documentation>
            Name of the FdFr to retrieve
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getFdFrResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getFdFr operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fdfr" type="fdfr:FlowDomainFragmentType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            Retrieved FdFr with the name as specified in input.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

<!-- ===================== getFdFrRoute Request/Response Messages ========= -->
  <xsd:complexType name="getFdFrRouteRequestType">
    <xsd:annotation>
      <xsd:documentation>
        This service returns the route for the FdFr whose name is specified 
        as a parameter. 
        It is only used for systems where the route is provisioned by the NMS
        (e.g., it is not useful for Ethernet networks using GVRP).</p>
    
        Raises globaldefs::ProcessingFailureException
        EXCPT_NOT_IMPLEMENTED - Raised if the entire request is not supported 
        by the EMS or the request with the specified input parameters 
        is not supported.
        EXCPT_INTERNAL_ERROR - Raised in case of non-specific EMS internal 
        failure
        EXCPT_INVALID_INPUT - Raised when fdfrName does not reference a 
        FdFr object
        EXCPT_ENTITY_NOT_FOUND - Raised when fdfrName references an FdFr object that 
        does not exist
        EXCPT_NE_COMM_LOSS - Raised when communication is lost to a managed element
        involved in this operation
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="fdfrName" type="nam:NamingAttributesType">
        <xsd:annotation>
          <xsd:documentation>
             The name of the FdFr.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

  <xsd:complexType name="getFdFrRouteResponseType">
    <xsd:annotation>
      <xsd:documentation>
        This is the response of the getFdFrRoute operation.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="route" type="fdfr:FdFrRouteType">
        <xsd:annotation>
          <xsd:documentation>
             The route of the FdFr.
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>

<!-- ================== -->
  <xsd:complexType name="ExceptionProfile1Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure operation profile#1</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:choice>
      <xsd:element name="exceptionInternalError" type="msg:BaseExceptionMessageType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Raised in case of non-specific OS internal failure</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="exceptionInvalidInput" type="msg:BaseExceptionMessageType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Raised in case one of the request parameters is not a valid object reference</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="exceptionEntityNotFound" type="msg:BaseExceptionMessageType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Raised in case one of the request parameters does not a refer to an existing object</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="exceptionCommFailure" type="msg:BaseExceptionMessageType">
        <xsd:annotation>
          <xsd:documentation>
            <p>Raised when communication to an entity (needed to help fulfill the request) is lost</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:choice>
  </xsd:complexType>

<!-- ================== -->
  <xsd:complexType name="ExceptionProfile2Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure operation profile#2 (OPTIONAL)</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:ExceptionProfile1Type">
        <xsd:choice>
          <xsd:element name="exceptionNotImplemented" type="msg:BaseExceptionMessageType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Raised when this optional operation is not implemented</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>

<!-- ================== -->
  <xsd:complexType name="ExceptionProfile3Type">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure operation profile#3 (OPTIONAL)</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexContent>
      <xsd:extension base="tns:ExceptionProfile2Type">
        <xsd:choice>
          <xsd:element name="exceptionTooManyOpenIterators" type="msg:BaseExceptionMessageType">
            <xsd:annotation>
              <xsd:documentation>
                <p>Raised when maximum number of iterators that the OS can support has been reached</p>
              </xsd:documentation>
            </xsd:annotation>
          </xsd:element>
        </xsd:choice>
      </xsd:extension>
    </xsd:complexContent>
  </xsd:complexType>
</xsd:schema>
