<?xml version="1.0" encoding="UTF-8"?>
<!-- mTOP DDP - DM Network Resource Fulfillment - Copyright TeleManagement Forum 2007 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:tns="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: Data Model Network Resource Assurance</p>
      <p>Module: Dataset XSD Module</p>
      <p>Description: This module contains the XML Schema common type definitions used in some the mTOP XML Network Resource Assurance objects.</p>
    </xsd:documentation>
  </xsd:annotation>
  <xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd"/>
  <!-- @TODO
#1: Combine a single enum from AssignedSeverityEnumType and PerceivedSeverityType
-->
  <!-- ================= -->
  <xsd:simpleType name="AcknowledgeIndicationType">
    <xsd:annotation>
      <xsd:documentation>
        <p>AcknowledgeIndicationType describes the event acknowledge state. </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="AI_EVENT_ACKNOWLEDGED">
        <xsd:annotation>
          <xsd:documentation>provided in case of manual or auto acknowledgement</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="AI_EVENT_UNACKNOWLEDGED">
        <xsd:annotation>
          <xsd:documentation>provided if the event has not been acknowledged but the OS supports acknowledgement for this event or in the case that the alarm has been previously acknowledged and then unacknowledged</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="AI_NA">
        <xsd:annotation>
          <xsd:documentation>provided in case the OS does not support acknowledgement for this event or does not support acknowledgement at all</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- ===================== -->
  <xsd:complexType name="AssignedSeverityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The assigned severity is allocated to a probable cause using the alarm severity assignment profile. </p>
        <p>The identified probable cause should be raised with the assigned severity. </p>
        <p>The assignment of severities is extended beyond PerceivedSeverity to cover the case where: </p>
        <p>- no alarm should be raised: "NOT_ALARMED"</p>
        <p>- the EMS/NE is free to make a choice based upon its local criteria: "FREE_CHOICE"</p>
        <p>All extensions are permitted (VENDOR_EXT and MINOR_EXT).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:simpleContent>
      <xsd:extension base="tns:AssignedSeverityEnumType">
        <xsd:attribute name="extension" type="xsd:string" use="optional"/>
      </xsd:extension>
    </xsd:simpleContent>
  </xsd:complexType>
  <!-- ===================== -->
  <xsd:simpleType name="AssignedSeverityEnumType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The enum values of a probable cause</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INDETERMINATE"/>
      <xsd:enumeration value="CRITICAL"/>
      <xsd:enumeration value="MAJOR"/>
      <xsd:enumeration value="MINOR"/>
      <xsd:enumeration value="WARNING"/>
      <xsd:enumeration value="NOT_ALARMED"/>
      <xsd:enumeration value="FREE_CHOICE"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:simpleType name="PerceivedSeverityType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The PerceivedSeverity values are consistent with ITU-T X.733 definitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PS_INDETERMINATE"/>
      <xsd:enumeration value="PS_CRITICAL"/>
      <xsd:enumeration value="PS_MAJOR"/>
      <xsd:enumeration value="PS_MINOR"/>
      <xsd:enumeration value="PS_WARNING"/>
      <xsd:enumeration value="PS_CLEARED"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:simpleType name="ProposedRepairActionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Element of ProposedRepairActionListType.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:complexType name="ProposedRepairActionListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of ProposedRepairActionType elements.</p>
The optional "X.733::ProposedRepairActions" parameter uses this type.
When present in an alarm notification, it indicates if the cause is known and the system being managed can suggest one or more solutions (such as switch in standby equipment, retry, replace media). This is consistent with the ITU-T X.733 definition.
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="proposedRepairAction" type="tns:ProposedRepairActionType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!-- ================= -->
  <xsd:simpleType name="ProtectionCommandType">
    <xsd:annotation>
      <xsd:documentation>
        <p>This type identifies the possible protection switch commands. See ITU-T Recommendation G.841 for definitions.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PC_CLEAR"/>
      <xsd:enumeration value="PC_LOCKOUT"/>
      <xsd:enumeration value="PC_FORCED_SWITCH"/>
      <xsd:enumeration value="PC_MANUAL_SWITCH"/>
      <xsd:enumeration value="PC_EXERCISER"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:simpleType name="ProtectionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The protection type identifies whether a protection switch is an MS protection switch or an SNCP protection switch.</p>
   <p>It should be noted that although the term MSP was chosen as the original specific protection scheme to which the related behaviour applied was Multiplex Section Protection, the label is now more generally applied to any 1+1 or 1:N Trail protection scheme.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="PT_MSP_APS"/>
      <xsd:enumeration value="PT_SNCP"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:simpleType name="ServiceAffectingType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Describes the impact of a fault on monitored entities </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SA_UNKNOWN">
        <xsd:annotation>
          <xsd:documentation>The OS cannot determine if the condition affects service or not</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SA_SERVICE_AFFECTING">
        <xsd:annotation>
          <xsd:documentation>The OS determines that the condition affects service</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SA_NON_SERVICE_AFFECTING">
        <xsd:annotation>
          <xsd:documentation>TheOS determines that the condition does not affect service</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:simpleType name="SpecificProblemType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Element of SpecificProblemListType.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string"/>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:simpleType name="SwitchReasonType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The switch reason reflects the reason why a switch occurred.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="SR_NA">
        <xsd:annotation>
        <xsd:documentation>Value used upon retrieval of switch data for non-revertive groups, if a more precise value is not available</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SR_RESTORED">
        <xsd:annotation>
        <xsd:documentation>used for revertive groups to indicate a return to the normal state</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SR_SIGNAL_FAIL">
        <xsd:annotation>
        <xsd:documentation></xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SR_SIGNAL_MISMATCH">
        <xsd:annotation>
        <xsd:documentation>Value used in the case the signal is ok, but is identified as coming from an incorrect source: TRAIL_TRACE_IDENTIFIER_MISMATCH, Signal Label Mismatch, etc</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SR_SIGNAL_DEGRADE">
        <xsd:annotation>
        <xsd:documentation></xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SR_AUTOMATIC_SWITCH">
        <xsd:annotation>
        <xsd:documentation>Value used when the exact switch reason is unknown, in retrievals of switch data if a protection switch is currently active or in protection switch notifications</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
      <xsd:enumeration value="SR_MANUAL">
        <xsd:annotation>
        <xsd:documentation>Value indicates a switch that was requested by the operator and includes forced switches</xsd:documentation>
        </xsd:annotation>
      </xsd:enumeration>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:complexType name="CorrelatedNotificationsType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Correlated notifications are identified by the object that emitted the notification and the notification IDs. Both are included in case the Notification IDs are not unique across objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:all>
      <xsd:element name="name" type="nam:NamingAttributesType"/>
      <xsd:element name="notifIDs" type="tns:NotifIDListType"/>
    </xsd:all>
  </xsd:complexType>
  <!-- ================= -->
  <xsd:complexType name="CorrelatedNotificationListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of CorrelatedNotificationsType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="correlatedNotifications" type="tns:CorrelatedNotificationsType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!-- ================= -->
  <xsd:complexType name="PerceivedSeverityListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of PerceivedSeverityType elements.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="perceivedSeverity" type="tns:PerceivedSeverityType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!-- ================= -->
  <xsd:complexType name="SpecificProblemListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of SpecificProblemType elements.
The optional "X.733::SpecificProblems" parameter uses that type.
When present in an alarm notification, it identifies further refinements to the probable cause of the alarm. This is consistent with the ITU-T X.733 definition.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="specificProblem" type="tns:SpecificProblemType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  <!-- ================= -->
  <xsd:complexType name="NotifIDListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>List of notification IDs  (free string). Also,  the value found in notificationId field of the event.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="notificationId" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>
