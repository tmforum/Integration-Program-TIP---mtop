<?xml version="1.0" encoding="UTF-8"?>
<!-- mTOP DDP - OM ResourceTroubleManagement - Copyright TeleManagement Forum 2007 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:tns="http://www.tmforum.org/mtop/rtm/xsd/ar/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:prc="http://www.tmforum.org/mtop/nra/xsd/prc/v1" xmlns:com="http://www.tmforum.org/mtop/nra/xsd/com/v1" xmlns:alm="http://www.tmforum.org/mtop/rtm/xsd/alm/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: ResourceTroubleManagement</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type definitions of all the mTOP AlarmRetrieval SI XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!-- ================ -->
  <xsd:import schemaLocation="../../../Framework/IIS/xsd/MessageDefinitions.xsd" namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1"/>
  <xsd:import schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd" namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceAssurance/IIS/xsd/CommonTypes.xsd" namespace="http://www.tmforum.org/mtop/nra/xsd/com/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceAssurance/IIS/xsd/ProbableCauses.xsd" namespace="http://www.tmforum.org/mtop/nra/xsd/prc/v1"/>
  <xsd:import schemaLocation="AlarmEvent.xsd" namespace="http://www.tmforum.org/mtop/rtm/xsd/alm/v1"/>
  <!-- ================ -->
  <xsd:element name="getActiveAlarmsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getActiveAlarms operation</p>
        <p>This operation returns (to the requesting OS) a specified subset of the active alarms known to the target OS. The target OS returns all alarms satisfying the filter constraints of the requesting OS. This operation can only be directed to a top-level OS and not to a subordinate OS.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="filter" type="tns:ActiveAlarmFilterType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Defines the subset of the set of active alarms known to the target OS that are to be returned to the requesting OS.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getActiveAlarmsResponse" type="alm:AlarmListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getActiveAlarms operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getActiveAlarmsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getActiveAlarms operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:communicationFailure"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unsupportedCompressionFormat"/>
            <xsd:element ref="msg:unsupportedPackingFormat"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="getActiveAlarmsIteratorRequest" type="msg:GetAllDataIteratorRequestType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getActiveAlarmsIterator operation</p>
        <p>This operation .</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getActiveAlarmsIteratorResponse" type="alm:AlarmListType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getActiveAlarmsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <xsd:element name="getActiveAlarmsIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getActiveAlarmsIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="getActiveAlarmsCountRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getActiveAlarmsCount operation</p>
        <p>This operation returns the number of active alarms as restricted by the provided filter. The target OS sends the result to the requesting OS.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="filter" type="tns:ActiveAlarmFilterType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>Defines the subset of the set of active alarms known to the target OS that are to be returned to the requesting OS.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getActiveAlarmsCountResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getActiveAlarmsCount operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="activeAlarmCount" type="xsd:unsignedInt">
          <xsd:annotation>
            <xsd:documentation>
              <p>The number of active alarms that pass the filter conditions.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getActiveAlarmsCountException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getActiveAlarmsCount operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:communicationFailure"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================= -->
  <xsd:simpleType name="AlarmSourceType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The source of the alarm with respect to the OS receiving this request. This is one of  the active alarm filter criteria.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:restriction base="xsd:string">
      <xsd:enumeration value="INTERNAL"/>
      <xsd:enumeration value="EXTERNAL"/>
    </xsd:restriction>
  </xsd:simpleType>
  <!-- ================= -->
  <xsd:complexType name="ActiveAlarmFilterType">
    <xsd:annotation>
      <xsd:documentation>
        <p>The active alarm filter data structure. Default interpretation (filter criteria is missing or is an empty list) indicates that it is not relevant to the query. All the filter criteria possible enumerations are applicable.</p>
        <p>Examples:<ul>
            <li>#1: All filter criteria missing -> Retrieve all alarms associated with all MEs and this OS</li>
            <li>#2: source=internal, all other criteria missing -> Retrieve all alarms associated with this OS only</li>
            <li>#3: source=external, all other criteria missing -> Retrieve all alarms associated with the MEs only</li>
          </ul>
        </p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:sequence>
      <xsd:element name="source" type="tns:AlarmSourceType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute filters the alarms based on their source (with respect to the OS receiving this request). Possible values are INTERNAL, EXTERNAL, NOT_APPLICABLE. The value NOT_APPLICABLE means there is no filtering on the alarm source; i.e., internal and external alarms are in the scope.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="scope" type="nam:NamingAttributesListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute filters the alarms based on a list of managed elements. The listed managed elements are in the scope. 
If no managed element is provided, alarms from all managed elements are in scope.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="perceivedSeverityList" type="com:PerceivedSeverityListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute filters the alarms based on a list of severities (see ITU-T X.733 definitions). The listed severities are in the scope. 
If no severity is provided, alarms with any severity are in scope.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="probableCauseList" type="prc:ProbableCauseListType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute filters the alarms based on a list of probable causes (for details refer to the supporting document: ProbableCauses). The listed probable causes are in the scope. If no probable cause is provided, alarms with any probable cause are in scope.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
      <xsd:element name="acknowledgeIndication" type="com:AcknowledgeIndicationType" minOccurs="0">
        <xsd:annotation>
          <xsd:documentation>
            <p>This attribute filters the alarms based on its acknowledge indication. Possible values are EVENT_ACKNOWLEDGED, EVENT_UNACKNOWLEDGED, and NOT_APPLICABLE. The value NOT_APPLICABLE indicates that alarms with any acknowledge indication are in scope.</p>
          </xsd:documentation>
        </xsd:annotation>
      </xsd:element>
    </xsd:sequence>
  </xsd:complexType>
</xsd:schema>
