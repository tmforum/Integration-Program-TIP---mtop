<?xml version="1.0" ?>
<!-- mTOP DDP - Framework - Copyright TeleManagement Forum 2007 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
targetNamespace="http://www.tmforum.org/mtop/fmw/xsd/mart/v1" 
xmlns:tns="http://www.tmforum.org/mtop/fmw/xsd/mart/v1" 
xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" 
xmlns:cei="http://www.tmforum.org/mtop/fmw/xsd/cei/v1" 
attributeFormDefault="unqualified" elementFormDefault="qualified" version="2.0">
  
    <xsd:complexType name="martRequestType">
      <xsd:sequence>
        <!-- message level controls -->
        <xsd:element name="correlationID" type="xsd:string"/>
        <xsd:element name="MartFailPolicy" type="MartFailPolicyType" minOccurs="0"/>
        <xsd:element name="order" type="MartOrderType" minOccurs="0"/>
        <xsd:element name="templateList" type="TemplateListType"/>
        <xsd:element name="operationSet" type="OperationSetType" minOccurs="1" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>
  
  <xsd:simpleType name="MartFailPolicyType">
      <xsd:restriction base="xsd:string"> 
		    <xsd:enumeration value="bestEffort"/>
		    <xsd:enumeration value="halt"/>
		    <xsd:enumeration value="rollBack"/>
		</xsd:restriction>
  </xsd:simpleType>
  
  <xsd:simpleType name="MartOrderType">
    <xsd:restriction base="xsd:string">     
	    <xsd:enumeration value="seq"/>
	    <xsd:enumeration value="any"/>
         </xsd:restriction>
  </xsd:simpleType>
  
  <xsd:complexType name="TemplateListType">
    <xsd:sequence>
      <!-- templates have the same structure as the operations for while they are templates -->
      <xsd:element name="templateName" type="xsd:string" />
      <xsd:element name="template" type="operationType" maxOccurs="unbounded"/>
    
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="OperationSetType">
    <xsd:sequence>
      <!-- operationSet level controls -->
      <xsd:element name="failPolicy" type="MartFailPolicyType" minOccurs="0"/>
      <xsd:element name="order" type="MartOrderType" minOccurs="0"/>
      <!-- Operations -->
      <xsd:element name="operation" type="OperationType" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
  </xsd:complexType>
  
  <xsd:complexType name="OperationType">
    <xsd:sequence>
      <!-- label which is used to reassociate the results in the response with the request -->
      <xsd:element name="opLabel" type="xsd:string"/>
      <!-- operation level controls -->
      <xsd:element name="failPolicy" type="MartFailPolicyType" minOccurs="0"/> 
      
      <!-- Operation can optionally name a template which will provide values for any element
              not explicitly included here -->
      <xsd:element name="templateName" type="xsd:string" minOccurs="0"/>
  
          <!-- Operation can be any one of the following which ref the fine grain operation definitions -->
      <xsd:choice>
        <xsd:element ref="provisionEquipment"/>
        <xsd:element ref="unprovisionEquipment"/>
        <xsd:element ref="verifyTMDAssignment"/>
        <xsd:element ref="createFTP"/>
        <xsd:element ref="deleteFTP"/>
        <xsd:element ref="setTPData"/>
        <xsd:element ref="createSNC"/>
        <xsd:element ref="activateSNC"/>
        <xsd:element ref="createAndActivateSNC"/>
        <xsd:element ref="deactivateSNC"/>
        <xsd:element ref="deleteSNC"/>
        <xsd:element ref="deactivateAndDeleteSNC"/>
        <xsd:element ref="checkValidSNC"/>
        <xsd:element ref="createModifiedSNC"/>
        <xsd:element ref="modifySNC"/>
        <xsd:element ref="createTopologicalLink"/>
        <xsd:element ref="deleteTopologicalLink"/>
        <xsd:element ref="createTransmissionDescriptor"/>
        <xsd:element ref="deleteTransmissionDescriptor"/>
        <xsd:element ref="modifyTransmissionDescriptor"/>
        <xsd:element ref="createFlowDomain"/>
        <xsd:element ref="deleteFlowDomain"/>
        <xsd:element ref="modifyFlowDomain"/>
        <xsd:element ref="createMFD"/>
        <xsd:element ref="deleteMFD"/>
        <xsd:element ref="modifyMFD"/>
        <xsd:element ref="validateTMDAssignmentToMFD"/>
        <xsd:element ref="createAndActivateFDFr"/>
        <xsd:element ref="deactivateAndDeleteFDFr"/>
        <xsd:element ref="modifyFDFr"/>
        <xsd:element ref="associateMFDsWithFlowDomain"/>
        <xsd:element ref="deAssociateMFDsFromFlowDomain"/>
        <xsd:element ref="associateCPTPsWithFlowDomain"/>
        <xsd:element ref="deAssociateCPTPsFromFlowDomain"/>
        <xsd:element ref="addFPsToFDFr"/>
        <xsd:element ref="removeFPsFromFDFr"/>
        <xsd:element ref="createFTP"/>
        <xsd:element ref="deleteFTP"/>
        <xsd:element ref="createTPPool"/>
        <xsd:element ref="deleteTPPool"/>
        <xsd:element ref="modifyTPPool"/>
        <xsd:element ref="assignCPTPsToMFD"/>
        <xsd:element ref="unassignCPTPsFromMFD"/>
        <xsd:element ref="createGTP"/>
        <xsd:element ref="deleteGTP"/>
        <xsd:element ref="modifyGTP"/>
        <xsd:element ref="createTCAParameterProfile"/>
        <xsd:element ref="deleteTCAParameterProfile"/>
        <xsd:element ref="setTCAParameterProfile"/>
        <xsd:element ref="setTCAParameterProfilePointer"/>
        <xsd:element ref="createASAP"/>
        <xsd:element ref="deleteASAP"/>
        <xsd:element ref="assignASAP"/>
        <xsd:element ref="deassignASAP"/>
        <xsd:element ref="establishCall"/>
        <xsd:element ref="releaseCall"/>
  
          <!-- this element is provided for future MTOSI extensions -->
        <xsd:element name="extOperation">
          <xsd:complexType>
            <xsd:any namespace="##targetNameSpace" processContents="lax"/>
          </xsd:complexType>
        </xsd:element>
    
        <!-- this element is provided as an vendor extension point by using the "any" construct -->
    <xsd:element name="vendorOperation">
          <xsd:complexType>
            <xsd:any namespace="##other" processContents="lax"/>
          </xsd:complexType>
        </xsd:element>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>

    <!--martResponse -->
    <xsd:complexType name="martResponseType">
      <xsd:sequence>
		<xsd:element name="coorelationID" type="xsd:string"/>
        <xsd:element name="result" type="ResultType"/>
        <xsd:element name="errorReason" type="xsd:string" minOccurs="0"/>
        <xsd:element name="opResult" type="OpResultType" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
    </xsd:complexType>

  
  <xsd:simpleType name="ResultType">
       <xsd:restriction base="xsd:string">
		    <xsd:enumeration value="Success"/>
		    <xsd:enumeration value="Fail"/>
		    <xsd:enumeration value="NotAttempted"/>
		    <xsd:enumeration value="Unknown"/>
       </xsd:restriction>
  </xsd:simpleType>
  
  <xsd:complexType name="OpResultType">
    <xsd:sequence>
      <!-- label which is used to reassociate the results in the response with the request -->
      <xsd:element name="opLabel" type="xsd:string"/>
      <!-- generic result data -->
      <xsd:element name="result" type="ResultType"/>
      <xsd:element name="errorReason" type="xsd:string" minOccurs="0"/>
      <!-- operation specific result data takes same form as for fine grain operations -->
      <xsd:choice>
        <xsd:element ref="provisionEquipmentResp"/>
        <xsd:element ref="unprovisionEquipmentResp"/>
        <xsd:element ref="verifyTMDAssignmentResp"/>
        <xsd:element ref="createFTPResp"/>
        <xsd:element ref="deleteFTPResp"/>
        <xsd:element ref="setTPDataResp"/>
        <xsd:element ref="createSNCResp"/>
        <xsd:element ref="activateSNCResp"/>
        <xsd:element ref="createAndActivateSNCResp"/>
        <xsd:element ref="deactivateSNCResp"/>
        <xsd:element ref="deleteSNCResp"/>
        <xsd:element ref="deactivateAndDeleteSNCResp"/>
        <xsd:element ref="checkValidSNCResp"/>
        <xsd:element ref="createModifiedSNCResp"/>
        <xsd:element ref="modifySNCResp"/>
        <xsd:element ref="createTopologicalLinkResp"/>
        <xsd:element ref="deleteTopologicalLinkResp"/>
        <xsd:element ref="createTransmissionDescriptorResp"/>
        <xsd:element ref="deleteTransmissionDescriptorResp"/>
        <xsd:element ref="modifyTransmissionDescriptorResp"/>
        <xsd:element ref="createFlowDomainResp"/>
        <xsd:element ref="deleteFlowDomainResp"/>
        <xsd:element ref="modifyFlowDomainResp"/>
        <xsd:element ref="createMFDResp"/>
        <xsd:element ref="deleteMFDResp"/>
        <xsd:element ref="modifyMFDResp"/>
        <xsd:element ref="validateTMDAssignmentToMFDResp"/>
        <xsd:element ref="createAndActivateFDFrResp"/>
        <xsd:element ref="deactivateAndDeleteFDFrResp"/>
        <xsd:element ref="modifyFDFrResp"/>
        <xsd:element ref="associateMFDsWithFlowDomainResp"/>
        <xsd:element ref="deAssociateMFDsFromFlowDomainResp"/>
        <xsd:element ref="associateCPTPsWithFlowDomainResp"/>
        <xsd:element ref="deAssociateCPTPsFromFlowDomainResp"/>
        <xsd:element ref="addFPsToFDFrResp"/>
        <xsd:element ref="removeFPsFromFDFrResp"/>
        <xsd:element ref="createFTPResp"/>
        <xsd:element ref="deleteFTPResp"/>
        <xsd:element ref="createTPPoolResp"/>
        <xsd:element ref="deleteTPPoolResp"/>
        <xsd:element ref="modifyTPPoolResp"/>
        <xsd:element ref="assignCPTPsToMFDResp"/>
        <xsd:element ref="unassignCPTPsFromMFDResp"/>
        <xsd:element ref="createGTPResp"/>
        <xsd:element ref="deleteGTPResp"/>
        <xsd:element ref="modifyGTPResp"/>
        <xsd:element ref="createTCAParameterProfileResp"/>
        <xsd:element ref="deleteTCAParameterProfileResp"/>
        <xsd:element ref="setTCAParameterProfileResp"/>
        <xsd:element ref="setTCAParameterProfilePointerResp"/>
        <xsd:element ref="createASAPResp"/>
        <xsd:element ref="deleteASAPResp"/>
        <xsd:element ref="assignASAPResp"/>
        <xsd:element ref="deassignASAPResp"/>
        <xsd:element ref="establishCallResp"/>
        <xsd:element ref="releaseCallResp"/>
      </xsd:choice>
    </xsd:sequence>
  </xsd:complexType>

    <!-- GetProgressState -->
    <xsd:complexType name="martGetProcessStateRequestType">
      <xsd:sequence>
         <xsd:element name="correlationID" type="xsd:string"  />
      </xsd:sequence>
    </xsd:complexType>
   
    <xsd:complexType name="martGetProcessStateResponseType">
      <xsd:sequence>
         <xsd:element name="correlationID" type="xsd:string"  />
         <xsd:element name="state" type="stateType"  />
         <xsd:element name="reason"  minOccurs="0"/>
      </xsd:sequence>
    </xsd:complexType>

    <!-- martTermination -->
      <xsd:complexType name="martTerminateRequestType">
         <xsd:sequence>
            <xsd:element name="correlationID" type="xsd:string"  />
         </xsd:sequence>
      </xsd:complexType>

    <xsd:complexType name="martTerminationResponseType">
      <xsd:sequence>
         <xsd:element name="correlationID" type="xsd:string"  />
         <xsd:element name="state" type="stateType" />
         <xsd:element name="reason"  minOccurs="0"/>
      </xsd:sequence>
    </xsd:complexType>
    
    <xsd:simpleType name="stateType">
 	   <xsd:restriction base="xsd:string">
	       <xsd:enumeration value="Completed Successfully" />
	       <xsd:enumeration value="Termination Successfully" />
	       <xsd:enumeration value="Failed" />
	       <xsd:enumeration value="Not Started" />
	       <xsd:enumeration value="In progress" />
	       <xsd:enumeration value="Unknown" />
	   </xsd:restriction>
    </xsd:simpleType>

    <!-- Exceptions -->
    <xsd:complexType name="martExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the mart operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:element name="CorrelationID" type="xsd:string"/>
      <xsd:choice>
        <xsd:element name="exceptionInternalError" type="msg:BaseExceptionMessageType"/>
        <xsd:element name="exceptionTimeOut" type="msg:BaseExceptionMessageType"/>
      </xsd:choice>
    </xsd:complexType>
  </xsd:schema>
