<?xml version="1.0" encoding="UTF-8"?>
<!-- mTOP DDP - OM ResourceTroubleManagement - Copyright TeleManagement Forum 2008 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.tmforum.org/mtop/rtm/xsd/pr/v1" xmlns:tns="http://www.tmforum.org/mtop/rtm/xsd/pr/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:pg="http://www.tmforum.org/mtop/nra/xsd/pg/v1" xmlns:epg="http://www.tmforum.org/mtop/nra/xsd/epg/v1" xmlns:sd="http://www.tmforum.org/mtop/nra/xsd/sd/v1" xmlns:esd="http://www.tmforum.org/mtop/nra/xsd/esd/v1" attributeFormDefault="unqualified" elementFormDefault="qualified" version="1.0">
  <xsd:annotation>
    <xsd:documentation>
      <p>DDP: ResourceTroubleManagement</p>
      <p>Module:  Message XSD Module</p>
      <p>Description: This module contains the XML Schema type definitions of all the mTOP ProtectionRetrieval SI XML message structures.</p>
    </xsd:documentation>
  </xsd:annotation>
  <!-- ================ -->
  <xsd:import schemaLocation="../../../Framework/IIS/xsd/MessageDefinitions.xsd" namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1"/>
  <xsd:import schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd" namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceAssurance/IIS/xsd/Pg.xsd" namespace="http://www.tmforum.org/mtop/nra/xsd/pg/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceAssurance/IIS/xsd/Epg.xsd" namespace="http://www.tmforum.org/mtop/nra/xsd/epg/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceAssurance/IIS/xsd/SwitchData.xsd" namespace="http://www.tmforum.org/mtop/nra/xsd/sd/v1"/>
  <xsd:import schemaLocation="../../../NetworkResourceAssurance/IIS/xsd/EquipmentSwitchData.xsd" namespace="http://www.tmforum.org/mtop/nra/xsd/esd/v1"/>
  <!-- ================ -->
  <xsd:element name="getAllEquipmentProtectionGroupsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAllEquipmentProtectionGroups operation</p>
        <p>This operation is used by the client to discover all the 
         equipment protection groups currently in operation for the managed
         element.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="meRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the managed element for which the request is made.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllEquipmentProtectionGroupsResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAllEquipmentProtectionGroups operation</p>
        <p>This is the first batch of EquipmentProtectionGroup objects. Use getEquipmentProtectionGroupIterator to retrieve iteratively all other batches of EquipmentProtectionGroup objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="epgList" type="epg:EquipmentProtectionGroupListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The first batch of EquipmentProtectionGroup objects.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllEquipmentProtectionGroupsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAllEquipmentProtectionGroups operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="getAllNonPreemptibleUnprotectedTpNamesRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAllNonPreemptibleUnprotectedTpNames operation</p>
        <p>This operation gets the list of names of CTPs that are configured to 
         carry Non-preemptible Unprotected extra Traffic.  The result is independent 
         of the current switch status.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="pgRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the protection group.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllNonPreemptibleUnprotectedTpNamesResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAllNonPreemptibleUnprotectedTpNames operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="refList" type="nam:NamingAttributeListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The list of CTP names that have NUT turned on.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllNonPreemptibleUnprotectedTpNamesException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAllNonPreemptibleUnprotectedTpNames operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="getAllPreemptibleTerminationPointNamesRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAllPreemptibleTerminationPointNames operation</p>
        <p>This operation gets the list of names of CTPs that can carry preemptible 
         extra traffic.  The result is independent of the current
         switch status.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="pgRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>the name of the protection group.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllPreemptibleTerminationPointNamesResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAllPreemptibleTerminationPointNames operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="refList" type="nam:NamingAttributeListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The list of CTP names that can carry preemptible extra traffic.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllPreemptibleTerminationPointNamesException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAllPreemptibleTerminationPointNames operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="getAllProtectedTerminationPointNamesRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAllProtectedTerminationPointNames operation</p>
        <p>This operation gets the list of CTPs that can carry protected
         traffic. The result is independent of the current switch status.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="pgRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>the name of the protection group.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllProtectedTerminationPointNamesResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAllProtectedTerminationPointNames operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="refList" type="nam:NamingAttributeListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The list of CTP names that can carry protected traffic.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllProtectedTerminationPointNamesException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAllProtectedTerminationPointNames operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="getAllProtectionGroupsRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getAllProtectionGroups operation</p>
        <p>This operation is used by the client to discover all the 
         protection groups currently in operation for the managed
         element.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="meRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>the name of the managed element for which the request is made.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllProtectionGroupsResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getAllProtectionGroups operation</p>
        <p>This is the first batch of ProtectionGroup objects. Use getProtectionGroupIterator to retrieve iteratively all other batches of ProtectionGroup objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="pgList" type="pg:ProtectionGroupListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The first batch of ProtectionGroup objects.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getAllProtectionGroupsException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getAllProtectionGroups operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:tooManyOpenIterators"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="getContainingProtectionGroupNamesRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getContainingProtectionGroupNames operation</p>
        <p>This operation returns the names of the Protection Groups containing the given
         PhysicalTerminationPoint.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="ptpRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>the name of the PTP</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getContainingProtectionGroupNamesResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getContainingProtectionGroupNames operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="refList" type="nam:NamingAttributeListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The list of containing ProtectionGroups.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getContainingProtectionGroupNamesException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getContainingProtectionGroupNames operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="getEquipmentProtectionGroupRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getEquipmentProtectionGroup operation</p>
        <p>This operation is used to get the current status of an 
           Equipment Protection Group. This service is needed so that even if a 
           filter is established, the OS can query the status of a 
           protection group.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="epgRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the EPG.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getEquipmentProtectionGroupResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getEquipmentProtectionGroup operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="epg" type="epg:EquipmentProtectionGroupType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The EPG.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getEquipmentProtectionGroupException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getEquipmentProtectionGroup operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="getProtectionGroupRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getProtectionGroup operation</p>
        <p>This operation is used to get the current status of a 
         protectionGroup. This service is needed so that even if a filter
         is established, the OS can query the status of a protection group.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="pgRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>the name of the PG.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getProtectionGroupResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getProtectionGroup operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="pg" type="pg:ProtectionGroupType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The PG.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getProtectionGroupException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getProtectionGroup operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="retrieveEquipmentSwitchDataRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the retrieveEquipmentSwitchData operation</p>
        <p>This operation is used by the OS to get the latest switch status
         on an equipment protection group.
         For a retrieval of a revertive M:N group, N ESwitchData_T 
         are returned as a result of retrieveESwitchData (one for 
         each worker equipment instance).
       For a retrieval of a non-revertive M:N group, N ESwitchData_T 
       are returned as a result of retrieveESwitchData (one for 
       each active equipment instance).</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="epgRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The name of the EPG.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="retrieveEquipmentSwitchDataResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the retrieveEquipmentSwitchData operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="equimentSwitchDataList" type="esd:EquipmentSwitchDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The current protection switch status equipment protection group provided.</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="retrieveEquipmentSwitchDataException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the retrieveEquipmentSwitchData operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="retrieveSwitchDataRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the retrieveSwitchData operation</p>
        <p>This operation is used by the OS to get the latest switch status
           on an SNC or an MSP group.</p>
        <p>It should be noted that although the term MSP was chosen 
         as the original specific protection scheme to which the related behaviour
         applied was Multiplex Section Protection, the label is now more generally 
         applied to any 1+1 or 1:N Trail protection scheme.</p>
        <p>When used on the reliable CTP/FTP of an SNC, a single struct is returned 
         and the group name is NULL. The switchToTpRef indicates the presently active
         source of the traffic to the protectedTpRef.</p>
        <p> When used on a 1+1 MSP, a single struct is provided with the 
         relevant data.</p>
        <p> When used on a 1:N MSP, a struct per worker TP is presented with
       protectedTpRef being the worker TP Name and the switchToTpRef identifying
       the present source of the traffic.</p>
        <p> When used on a 2F BLSR, two structs are returned, one per TP. 
       In a stable state, the protectedTpRef and the switchToTpRef are the same TP. 
       In a switched state, the switchToTpRef is the same for both protectedTpRefs.</p>
        <p> When used on a 4F BLSR, two structs are returned,
       each one identifying a span with the protectedTpRef being the worker TP 
       and the switchToTpRef identifying the present source of the ring traffic
       for that span. See SD1-34_protectionSwitch.pdf for more information.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="reliableSinkCtpOrGroupRef" type="nam:NamingAttributeType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>This is the CTP/FTP that is the output of a service selector in 
         case of the SNC or the group name for which the switch data is 
         being requested. The termination point name must be explicit (a 
         generic endpoint specification may not be used in this case). See Framework DDP
         SD2-7_ObjectNaming for further detail on FTP naming</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="retrieveSwitchDataResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the retrieveSwitchData operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="switchDataList" type="sd:SwitchDataListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The current protection switch status of the CTP, FTP or PG provided</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="retrieveSwitchDataException">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the retrieveSwitchData operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:complexContent>
        <xsd:restriction base="msg:AllExceptionsType">
          <xsd:choice>
            <xsd:element ref="msg:commLoss"/>
            <xsd:element ref="msg:entityNotFound"/>
            <xsd:element ref="msg:internalError"/>
            <xsd:element ref="msg:invalidInput"/>
            <xsd:element ref="msg:notImplemented"/>
            <xsd:element ref="msg:unableToComply"/>
          </xsd:choice>
        </xsd:restriction>
      </xsd:complexContent>
    </xsd:complexType>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="getEquipmentProtectionGroupIteratorRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getEquipmentProtectionGroupIterator operation</p>
        <p>This operation is used to retrieve the other batches (next) of EquipmentProtectionGroup objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getEquipmentProtectionGroupIteratorResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getEquipmentProtectionGroupIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="epgList" type="epg:EquipmentProtectionGroupListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The next batch of EquipmentProtectionGroup objects</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getEquipmentProtectionGroupIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getEquipmentProtectionGroupIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
  <!-- ================ -->
  <xsd:element name="getProtectionGroupIteratorRequest">
    <xsd:annotation>
      <xsd:documentation>
        <p>Request message structure of the getProtectionGroupIterator operation</p>
        <p>This operation is used to retrieve the other batches (next) of ProtectionGroup objects.</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence/>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getProtectionGroupIteratorResponse">
    <xsd:annotation>
      <xsd:documentation>
        <p>Response message structure of the getProtectionGroupIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
    <xsd:complexType>
      <xsd:sequence>
        <xsd:element name="pgList" type="pg:ProtectionGroupListType" minOccurs="0">
          <xsd:annotation>
            <xsd:documentation>
              <p>The next batch of ProtectionGroup objects</p>
            </xsd:documentation>
          </xsd:annotation>
        </xsd:element>
      </xsd:sequence>
    </xsd:complexType>
  </xsd:element>
  <xsd:element name="getProtectionGroupIteratorException" type="msg:GetAllDataIteratorExceptionType">
    <xsd:annotation>
      <xsd:documentation>
        <p>Exception message structure of the getProtectionGroupIterator operation</p>
      </xsd:documentation>
    </xsd:annotation>
  </xsd:element>
</xsd:schema>
