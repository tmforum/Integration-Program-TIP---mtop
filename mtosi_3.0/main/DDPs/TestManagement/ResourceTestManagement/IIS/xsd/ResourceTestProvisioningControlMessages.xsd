<?xml version="1.0" encoding="UTF-8"?>
<!-- mTOP DDP - OM ResourceProvisioning - Copyright TeleManagement Forum 2014 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/rt/xsd/rtp/v1" xmlns:fd="http://www.tmforum.org/mtop/nrf/xsd/fd/v1" xmlns:fdfr="http://www.tmforum.org/mtop/nrf/xsd/fdfr/v1" xmlns:fdfrroute="http://www.tmforum.org/mtop/nrf/xsd/fdfrroute/v1" xmlns:mfd="http://www.tmforum.org/mtop/nrf/xsd/mfd/v1" xmlns:mfdfr="http://www.tmforum.org/mtop/nrf/xsd/mfdfr/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:itu="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:lay="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:tpdata="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:crcd="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:crmd="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1"  xmlns:lr="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:cc="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" xmlns:snc="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" xmlns:rsctest="http://www.tmforum.org/mtop/rt/xsd/rsctest/v1" targetNamespace="http://www.tmforum.org/mtop/rt/xsd/rtp/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
	<xsd:annotation>
		<xsd:documentation>
			<p>DDP: ResourceProvisioning</p>
			<p>Module:  Message XSD Module</p>
			<p>Description: This module contains the XML Schema type definitions of all Resource Test Provisioning SI XML message structures.</p>
		</xsd:documentation>
	</xsd:annotation>
	<!-- ================ -->
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="../../../Framework/IIS/xsd/MessageDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/cc/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Cc.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/itu/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/ITU-T-Definitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayeredParameters.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/fd/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Fd.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/fdfr/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/FDFr.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/fdfrroute/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/FDFrRoute.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/mfd/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/MFD.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayerRates.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/mfdfr/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/MFDfr.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/CommonTypes.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/snc/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Snc.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/TpData.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/CommonResourceCreateDataType.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/CommonResourceModifyDataType.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/rt/xsd/rsctest/v1" schemaLocation="ResourceTest.xsd"/>
	<!-- ================ -->
	<xsd:element name="createAndActivateFlowDomainFragmentWithTestRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the createAndActivateFlowDomainFragmentWithTest operation</p>
				<p>This operation creates and activates the FDFr as described below, but also starts proactive test(s) that are associated to the FDFr</p>
				<p>This operation creates a Flow Domain Fragment (FDFr) within the Flow Domain (FD).
        The target OS creates all necessary Flow Points and Matrix Flow Domain Fragments comprising the FDFr.
        The request is successful if at least two edge Flow Points can be created.
        In case not all requested (edge) Flow Points can be connected when the FDFr is created, the target OS returns
        the list of the not connectable Connectionless Port Termination Points (CPTPs) in the success reply.
        If internal CPTPs are provided by the requesting OS and if it is not possible to include all provided internal CPTPs
        to the route of the FDFr, the operation will be rejected.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="containingFdRef" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The name of the Flow Domain containing the Flow Domain Fragment.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="createData" type="tns:FlowDomainFragmentWithTestCreateDataType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Structure describing the FDFr structure to be created. Setting of
            connectionless parameters is best effort (except where specified otherwise 
            for a particular parameter).</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="connectivityRequirement" type="fd:ConnectivityRequirementType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>For a "connectivity-aware" Target OS, this parameter shall identify 
            the requested operation mode in case not all FPs have potential connectivity 
            to one another. If the Target OS is not connectivity-aware, this parameter is ignored.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="aEndRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>A list of of CPTP names that delimit the FDFr and characterize 
            its edges (entrance and/or exit points). As a result of creating the FDFr,
            FPs are created as clients of the Fd Edge CPTPs. 
            In case of a unidirectional 
            FDFr this attribute contains the list of source Fd Edge CPTPs. 
            In case of a 
            bidirectional FDFr this attribute may be combined with the zEnd TPs 
            attribute to obtain all the Fd Edge CPTPs that are associated to the 
            FDFr. 
            (N.B. For a bidirectional point to point FDFr it is suggested, but not 
            mandatory, to put one TP in the aEnd and one in the zEnd, as with SNCs and 
            TLs. For a multipoint FDFr, or a point-to-point FDFr that may be expanded 
            to multipoint, it is suggested to put all the TPs in the aEnd.) </p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="zEndRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>In case of a unidirectional FDFr this attribute contains the list of 
            sink Fd Edge CPTPs that delimit the FDFr and characterize its edges
            (exit points). 
            As a result of creating the FDFr, FPs are created as 
            clients of the Fd Edge CPTPs. 
            In case of a bidirectional FDFr this attribute 
            may be combined with the aEnd TPs attribute to obtain all the Fd Edge CPTPs 
            that are associated to the FDFr.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="internalTpRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>A (possibly empty) list of internal CPTP names that must be included 
            in the route of the FDFr. As a result of creating the FDFr, 
            FPs are created as clients of the internal CPTPs.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mfdfrList" type="mfdfr:MatrixFlowDomainFragmentListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>An optional (possibly empty) list of MFDFrs that make up the route 
            of the FDFr. This attribute may be omitted if the FDFr is routed by the network. 
            As a result of creating the FDFr, MFDFrs are created in the various MFDs.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>A list of TPs and parameters to apply. The list may refer to
            flow points that are being created during the createAndActivateFDFr request
            or to the containing CPTPs.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createAndActivateFlowDomainFragmentWithTestResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the createAndActivateFlowDomainFragmentWithTest operation</p>
				<p>The returned data is exactly the same as createAndActivateFlowDomainFragment, except a test list is also returned.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="aEndRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>A list of of CPTP names that delimit the FDFr and characterize 
            its edges (entrance and/or exit points). As a result of creating the FDFr,
            FPs are created as clients of the Fd Edge CPTPs. 
            In case of a unidirectional 
            FDFr this attribute contains the list of source Fd Edge CPTPs. 
            In case of a 
            bidirectional FDFr this attribute may be combined with the zEnd TPs 
            attribute to obtain all the Fd Edge CPTPs that are associated to the 
            FDFr. 
            (N.B. For a bidirectional point to point FDFr it is suggested, but not 
            mandatory, to put one TP in the aEnd and one in the zEnd, as with SNCs and 
            TLs. For a multipoint FDFr, or a point-to-point FDFr that may be expanded 
            to multipoint, it is suggested to put all the TPs in the aEnd.) </p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="zEndRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>In case of a unidirectional FDFr this attribute contains the list of 
            sink Fd Edge CPTPs that delimit the FDFr and characterize its edges
            (exit points). 
            As a result of creating the FDFr, FPs are created as 
            clients of the Fd Edge CPTPs. 
            In case of a bidirectional FDFr this attribute 
            may be combined with the aEnd TPs attribute to obtain all the Fd Edge CPTPs 
            that are associated to the FDFr.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="internalTpRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>A (possibly empty) list of internal CPTP names that must be included 
            in the route of the FDFr. As a result of creating the FDFr, 
            FPs are created as clients of the internal CPTPs.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="mfdfrList" type="mfdfr:MatrixFlowDomainFragmentListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>An optional (possibly empty) list of MFDFrs that make up the route 
            of the FDFr. This attribute may be omitted if the FDFr is routed by the network. 
            As a result of creating the FDFr, MFDFrs are created in the various MFDs.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of TPs with resulting parameters.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="createdFdfr" type="fdfr:FlowDomainFragmentType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This parameter returns the newly created Flow Domain Fragment object.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="testList" type="tns:TestListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of tests that were successfully created.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="notConnectableCptpRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of Connectionless Port Termination Points that could not 
            be connected.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="parameterProblemsTpRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of Connectionless Port Termination Points and Flow Points FPs
            for which only best-effort transmission parameters could not be set.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="errorReason" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This parameter returns the error(s) if any.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createAndActivateFlowDomainFragmentWithTestException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the createAndActivateFlowDomainFragment operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:notInValidState"/>
						<xsd:element ref="msg:tpInvalidEndPoint"/>
						<xsd:element ref="msg:unableToComply"/>
						<xsd:element ref="msg:userlabelInUse"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="createAndActivateSubnetworkConnectionWithTestRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the createAndActivateSubnetworkConnectionWithTest operation</p>
				<p>This operation creates and activates the SNC as described below, but also starts proactive test(s) that are associated to the SNC</p>
				<p>This operation provides a way to create and activate a subnetwork connection in one command. As with the createSnc() operation and the activateSnc() operation, this operation also applies to bundled SNCs (see SD1-3 Bundled SNC overview for further details).</p>
				<p>If the SNC represents a Control Plane Connection, the operation is rejected and an exception is raised.</p>
				<p>It conceptually behaves like a call to createSnc followed by a call to activateSnc. Therefore, if the pending state is supported, it is possible for the SNC to be created but activation to be rejected, and the resulting SNC will be in pending state. If the pending state is not supported, then this is not possible and the SNC will not be created if activation is rejected. All success/failure conditions that apply to the two base operations also apply to the combined operation.</p>
				<p>If the SNC or any of its network resources have changed as a result of this operation, then no exception can be thrown so that theSNC can be passed back to the Requesting OS. Therefore, the exceptions that apply to activateSnc may not apply to the combined operation: if the creation was successful but the activation is rejected (only possible if the pending state is supported), no exception shall be thrown and the resulting SNC shall be provided in the out parameter createdSnc.</p>
				<p>For more details on how this service affects the state of an SNC see SD1-23 SNC Management Modes of Operation and SD1-35 SNC state diagram.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="createData" type="tns:SubnetworkConnectionCreateDataWithTestType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Data about the potential SNC.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="tolerableImpact" type="com:GradesOfImpactType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The maximum tolerable impact allowed.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="osFreedomLevel" type="com:FreedomLevelType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>This parameter indicates the maximum level of freedom allowed to the target OS
            to perform the creation and activation.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>A list of TPs and parameters to apply.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="createAndActivateSubnetworkConnectionWithTestResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the createAndActivateSubnetworkConnectionWithTest operation</p>
				<p>The returned data is exactly the same as createAndActivateSubnetworkConnection, except a test list is also returned.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>A list of updated TPs to provide the resulting parameters.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="createdSnc" type="snc:SubnetworkConnectionType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The subnetwork connection after the operation.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="errorReason" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>Specifies the activation error(s) if any.</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="testList" type="tns:TestListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of tests that were successfully created.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="createAndActivateSubnetworkConnectionWithTestException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the createAndActivateSubnetworkConnectionWithTest operation</p>
				<p>notInValidState - Raised where the SNC would involve a CTP that is not connectable due to the state of the server TP or in the case of inverse multiplexing where the SNC would involve a CTP that is not connectable due to the state of the client TP.</p>
				<p>unableToComply - Raised if the SNC represents a Connection in the Control Plane.</p>
				<p>Raised if the target OS is unable to find a route for the SNC. Raised if the target OS can not meet the GradesOfImpact requested.</p>
				<p>Raised when the target OS is unable to execute the request because at least one of the parameters although valid can not be set and that parameter is identified as "not best effort" in the SD1-16 Layered Transmission Parameters document or in the SD1-1 Additional Information Usage document.</p>
				<p>Raised if the SNC cannot be activated because the target OS cannot comply for a reason different from the ones above. If the target OS cannot determine the reason it could not comply, it is also allowed to throw unableToComply.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:notInValidState"/>
						<xsd:element ref="msg:objectInUse"/>
						<xsd:element ref="msg:protectionEffortNotMet"/>
						<xsd:element ref="msg:unableToComply"/>
						<xsd:element ref="msg:unsupportedRoutingConstraints"/>
						<xsd:element ref="msg:userlabelInUse"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:complexType name="FlowDomainFragmentWithTestCreateDataType">
		<xsd:annotation>
			<xsd:documentation>
				<p>This data type represents the parameters that may be provided when creating a Flow Domain Fragment (FDFr).</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="crcd:CommonResourceCreateDataType">
				<xsd:sequence>
					<xsd:element name="direction" type="com:ConnectionDirectionType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>This attribute shall represent the directionality of the FDFr (bidirectional or unidirectional). Note: In the case of Ethernet, the directionality is always bidirectional.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="administrativeState" type="itu:X721.AdministrativeStateType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Indicates whether the FDFr is locked (i.e., traffic units cannot flow through the FDFr) or unlocked (i.e., traffic units are allowed to flow through the FDFr).</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="lp:transmissionParameters" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>The layer rate on which connectivity is established and a related set of connectionless parameters. Refer to chapter "Connectionless Technology Parameters" of the supporting document LayeredParameters.pdf for details of the currently defined connectionless parameters.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isFullRoute" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>This parameter identifies if the internal TPs and mfdfrs parameters of the createAndActivateFdfr operation describe the full route of the Flow Domain Fragment (as opposed to only a partial constraint). When no routing constraints are specified, false must be used.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="type" type="com:FlowDomainFragmentTypeType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Represents the type of the FDFr</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="route" type="fdfrroute:FlowDomainFragmentRouteType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This parameter provides the structure describing the Route</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="resourceTestDataList" type="tns:ResourceTestDataListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This parameter provides a structure of tests to be executed</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ================ -->
	<xsd:complexType name="ResourceTestDataListType">
		<xsd:annotation>
			<xsd:documentation>
				<p> a list of tests to be executed </p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:resourceTestData" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:element name="resourceTestData" type="tns:ResourceTestDataType" nillable="true"/>
	<xsd:complexType name="ResourceTestDataType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The attributes required when creating and activating an FDFr  in order to create the test object</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="testName" type="nam:NamingAttributeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>An indication of whether the test is being run pro-actively or on-demand.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testMode" type="rsctest:TestModeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>An indication of whether the test is being run pro-actively or on-demand.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testType" type="rsctest:TestTypeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>An indication of  the type of test. See the associated BA for standard test types. Vendor extensions are allowed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testAdminState" type="rsctest:TestAdminStateType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The test administrative state, which may be LOCKED or UNLOCKED</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="configuredByList" type="rsctest:TestParameterValueInUseType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>
						<p>Specifies a list of individual resource test parameters (by reference)  and their associated resource test parameter values.</p>
						<p> The standard parameter names and valid values are those provided in SD2-22 TestParameters.pdf, and are passed in real-time over the interface upon starting the test.</p>
						<p>There may be resource test parameters and associated values that are also passed, by reference, in the resource test specification.  If a parameter/value is found in both places, and is marked as "can be overriden", then the value passed in the configuredByList overrides the value in the specification.</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="resourceTestSpecification" type="nam:NamingAttributeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>Indicates the name of a resource test specification (RTS) that is to be used to describe how the test should be configured, and what measures should be taken as a result of executing the test. The RTS  may contain resource test parameters and their associated values and/or resource test measures. </p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="resourceTestMeasuresList" type="rsctest:ResourceTestMeasuresListType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>This attribute specifies a list of individual resource test measures that are expected to result from the execution of a test. For each measure a set of threshold rules may be defined that indicate under which condition(s) a threshold is considered to be passed, and the expected consequence(s).</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:complexType name="TestListType">
		<xsd:annotation>
			<xsd:documentation>
				<p> a list of test names and types returned from creation and activation of the flow domain fragment / subnetwork connection </p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:Test" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:element name="Test" type="tns:TestType" nillable="true"/>
	<xsd:complexType name="TestType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The test name and test type are returned for each test successfully started </p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="testName" type="xsd:string"/>
			<!-- name of the proactive test -->
			<xsd:element name="testType" type="rsctest:TestTypeType" minOccurs="0"/>
			<!-- test type -->
		</xsd:sequence>
	</xsd:complexType>
	<!-- ================ -->
	<xsd:complexType name="SubnetworkConnectionCreateDataWithTestType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The attributes required for the creation of a subnetworkConnection or a Control Plane Connection on the Target OS are packaged together in this data structure which the Requesting OS will pass to the Target OS at SNC/Connection creation time. It also creates proactive tests that are associated to the SNC</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="crcd:CommonResourceCreateDataType">
				<xsd:sequence>
					<xsd:element name="direction" type="com:ConnectionDirectionType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The connection directionality must be specified by the Requesting OS.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="staticProtectionLevel" type="com:StaticProtectionLevelType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Requesting OS must specify the requested staticProtectionLevel as specified in SD1-36 SNC Types.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="protectionEffort" type="com:ProtectionEffortType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Requesting OS must specify the protectionEffort as specified in SD1-36 SNC Types.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="rerouteAllowed" type="com:RerouteType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>This attribute indicates if the Target OS/MEs are allowed and/or required to reroute this SNC if there is a failure on this SNC, periodically to optimize the routes, or for any other reason.</p>
								<p>It is an Target OS/ME implementation whether this is done using network routing protocols or if the Target OS/MEs detect the failure and take appropriate action to attempt to fix the SNC.</p>
								<p>There is no requirement for the reroutes to respect the constraints specified in the creation request (ccInclusions, Resource Inclusions and Exclusions).</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="networkRouted" type="com:NetworkRoutedType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This attribute specifies if the network is allowed/required to route this SNC.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="type" type="com:SubnetworkConnectionTypeType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The Requesting OS must specify the sncType as specified in SD1-36 SNC Types.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="layerRate" type="lr:LayerRateType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Identifies the layer at which the SNC is to be made.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ccInclusionList" type="cc:CrossConnectListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Specifies a list of cross-connects that must be used by the SNC or Control Plane Connection, in which case are Routing Node connections, ended by SNPs or SNPPs, and the optional TNA/FTP/CTP end point values are provided by a/zEndTpList, a/zEndTnaNameOrGroupTnaName parameters.</p>
								<p>The list must be empty if no cross-connect constraints are required.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="inclusionResourceRefList" type="nam:NamingAttributeListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Specifies a list of MLRAs/MEs/TLs/MLSNPPLinks/MLSNPP/TPs/GTPs that must be used by the SNC. The list must be empty if no MLRAs/MEs/TLs/MLSNPPLinks/MLSNPP/TPs/GTPs constraints are required.</p>
								<p>If the target OS cannot fully satisfy the constraints, then the request will be rejected.</p>
								<p>Specifying both inclusion and exclusion constraints is not supported, therefore this list must be empty if exclusionResourceRefList is not empty.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isFullRoute" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>This attribute indicates whether the provided inclusion constraints specifies the complete route of the SNC or routing leg (as opposed to only a partial constraint). When no inclusions constraints are specified, false must be used.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="exclusionResourceRefList" type="nam:NamingAttributeListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Specifies a list of MLRAs/MEs/TLs/MLSNPPLinks/MLSNPP/TPs/GTPs/SNCs to be excluded. The SNC or Control Plane Connection to be created must not use any of the MLRAs/MEs/TLs/MLSNPPLinks/MLSNPP/TPs/GTPs/SNCs specified, nor any resource used by the SNCs or Connection specified.</p>
								<p>List must be empty if no exclusion constraints are required.</p>
								<p>Specifying both inclusion and exclusion constraints is not supported, therefore this list must be empty if ccInclusionList or inclusionResourceRefList is non empty.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="aEndTpRefList" type="nam:NamingAttributeListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>The requesting OS must specify the aEnd of the subnetworkConnection. This attribute provides the name of the CTP/FTP/GTP in a non-control plane SNC.</p>
								<p>Is also used to indicate the Source TP when adding a leg to an existing broadcast system. If the TP is an FTP the Requesting OS is allowed to specify a generic end point within a ME, the Target OS will choose the appropriate TP instance. See SD1-25 Object Naming for further detail.</p>
								<p>If the SNC participates in a VCAT connection, this attribute may be null. The interface will simply pass the concatenation level, leaving to target OS the freedom to choose proper virtually concatenated SNC end points.</p>
								<p>If the SNC represents a Control Plane Connection the aEnd may be identified in this attribute or in aEndTnaNameOrGroupTnaName, aEndTpListadditional attributes depending upon the information available to the target OS (as understood by the requesting OS).</p>
								<p>The value of this attribute may identify an MLSNPP or an MLSNPPLink (if available) or may be left empty. The SNPP/SNP identifier may be appended to the MLSNPP/MLSNPPLink name or may be provided in place of the MLSNPP/MLSNPPLink name to name a remote point.</p>
								<p>For a detailed description of the use of this attribute, see SD1-36 SNC Types.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="zEndTpRefList" type="nam:NamingAttributeListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Same behavior as aEnd attribute applies. Is also used to indicate the Sink TP when adding a leg to an existing broadcast system. If the Requesting OS supplies an invalid combination of TPs in aEnd and zEnd, then the Target OS will throw an INVALID_INPUT exception. Aend and Zend TPs have to be on the same subnetwork.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="aEndTpRoleList" type="com:EndPointRoleListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
          Defines the element that defines the end point role of all aEnd TPs of an SNC. This is an ordered list indexed with the aEndTpRefList of the SNC.
          </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isReportingAlarms" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
Provides an indication whether alarm reporting for this instance is active or not.
          </xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="networkReroute" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Indicates if the reroute of an SNC (if allowed) should be computed by the network, by the Target OS, or if it does not matter. Values are "Yes", "No", "NotSet".</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isRevertive" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Takes value "True" when an SNC can be switched back to its original route.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isRevertiveReroute" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Indicates whether the rerouting of an SNC is revertive or not.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="intendedRouteAEnds" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Must be specified when creating an SNC with multiple routes in case the end points of the intended route are a subset of SNC end points. Value is "aEnd-i-j-k-..." where i, j, k are the indexes of SNC aEnd points.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isIntendedRouteExclusive" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Specifies when creating an SNC with multiple routes if the intended route is EXCLUSIVE or not; if EXCLUSIVE, then the Target OS must find a route that does not conflict or shared CCs or CTPs with any other existing SNC route, in any state (pending/partial/current). Once an EXCLUSIVE (intended) route has been created by the Target OS, any further creation operation which conflicts with the exclusive route shall be rejected.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="intendedRouteZEnds" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Must be specified when creating an SNC with multiple routes in case the end points of the intended route are a subset of SNC end points. Value is "zEnd-i-j-k-..." where i, j, k are the indexes of SNC zEnd points.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="priority" type="xsd:unsignedInt" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>The SNC creation priority, where 0 is the highest priority.</p>
								<p>The priority allows to prevent activating routes because of CC or CTP conflicts with equal or higher prior SNCs.</p>
								<p>An SNC or a Connection in the Control Plane can pre-empt resources of another SNC of lower priority for restoration purposes.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="zEndTpRoleList" type="com:EndPointRoleListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Defines the element that defines the end point role of all zEnd TPs of an SNC. This is an ordered list indexed with the zEndTpRefList of the SNC.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="asapRef" type="nam:NamingAttributeType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Indicates the assignment of an ASAP to this SNC object. Value is the ASAP name.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="blsrDirection" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Used in conjunction with “Timeslot” when the Target OS cannot use the routing constraints for a BLSR case.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="isBundledSnc" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Indicates whether the SNC constitutes a Bundled SNC service (value “True”) or not.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="mustRemoveGtps" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>This attribute defines that the target OS has to delete all the interior Group Termination Points (GTPs) supporting the bundled Subnetwork Connection (SNC) when the SNC is deleted. The attribute is only used when creating bundled SNCs.</p>
								<p>It can take on two possible values:<uL>
										<li>true (the target OS must make a best-effort attempt to remove the interior GTPs that once belonged to the SNC) and</li>
										<li>false (the requesting OS doesn't care if the target OS removes the interior GTPs or not).</li>
									</uL>
								</p>
								<p>In the case that mustRemoveGtps is set to "true" and the target OS cannot remove all the interior GTPs, the target OS should return a list of the GTPs that could not be removed in the errorReason field of the deactivateAndDeleteSnc and deleteSnc operations. The errorReason will be "not all interior GTPs could be deleted" - this will be followed by the names of the GTPs that could not be deleted.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="potentialFutureSetupIndicator" type="com:PotentialFutureSetupIndicatorType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Refers to data type.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="routingConstraintEffort" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>The effort required for routing constraint application.</p>
								<p>Legal Values are:<ul>
										<li>BEST_EFFORT</li>
										<li>EXACT_MATCH</li>
									</ul>
								</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="timeslot" type="xsd:integer" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Used in conjunction with “blsrDirection”.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<!-- @@ added from Additional Info March 2011 ================ -->
					<xsd:element name="aEndTnaNameOrGroupTnaName" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Represent the TNA or Group-TNA of the Connection. A TNA Name List may have 3 value pairs.</p>
								<p>Format: \name=TNAName\value=TNANameValue\name=LogicalPortId\value=LogicalPortIdValue\name= Index\value=IndexValue.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="zEndTnaNameOrGroupTnaName" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>see aEndTNANameOrGroupTNAName.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="aEndTpList" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>String representing a sequence of name-value pairs. The backslash (“\”) character is used as separator.</p>
								<p>Format: \name=OS\value=CompanyName/OSname\name=ME\value=ManagedElementName\name=PTP\value=PTPName\name=CTP\value=CTPName E.g.: \name=OS\value=BigCompany/SmallEMS\name=ME\value=YellowManagedElement\name=PTP\value=BluePTP\name=CTP\value=RedCTP</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="zEndTpList" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>see aEndTpList.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="maximumCost" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>The maximum link/node cost allowed for routing.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="routeGroupLabel" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>This attribute shall represent the route group of the connection.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="connectionName" type="xsd:string" nillable="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p> String containing the RDN of the Call Name. The value in the last name-value pair of name structure.</p>
								<p> This attribute allows the requesting OS to provision the name of top level Connection at Call establishment.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<!-- @@ end of added from Additional Info March 2011 ================ -->
					<xsd:element name="resourceTestDataList" type="tns:ResourceTestDataListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>This parameter provides a structure of tests to be executed</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
