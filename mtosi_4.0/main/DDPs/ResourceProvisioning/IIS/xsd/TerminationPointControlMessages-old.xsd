<?xml version="1.0" encoding="UTF-8"?>
<!-- mTOP DDP - OM ResourceProvisioning - Copyright TeleManagement Forum 2008 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:tp="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" xmlns:com="http://www.tmforum.org/mtop/nrf/xsd/com/v1" xmlns:ftp="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" xmlns:gtp="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" xmlns:mlsn="http://www.tmforum.org/mtop/nrf/xsd/mlsn/v1" xmlns:tppool="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:tpdata="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:crcd="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" targetNamespace="http://www.tmforum.org/mtop/rp/xsd/tpc/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
	<xsd:annotation>
		<xsd:documentation>
			<p>DDP: ResourceProvisioning</p>
			<p>Module:  Message XSD Module</p>
			<p>Description: This module contains the XML Schema type definitions of all the mTOP TerminationPointControl SI XML message structures.</p>
		</xsd:documentation>
	</xsd:annotation>
	<!-- ================ -->
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="../../../Framework/IIS/xsd/MessageDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayeredParameters.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/com/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/CommonTypes.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tp/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Tp.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/ftp/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Ftp.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/gtp/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Gtp.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/mlsn/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/Mlsn.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tppool/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/TpPool.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/TpData.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/CommonResourceCreateDataType.xsd"/>
	<!-- ================ -->
	<xsd:element name="createFloatingTerminationPointRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the createFloatingTerminationPoint operation</p>
				<p>This operation allows an NMS requests from the EMS the creation of an FTP given the parameters passed in the method.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="createData" type="tns:FloatingTerminationPointCreateDataType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Structure describing the floating termination point structure to be created.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of TPs with associated parameters to be applied.
            Applying transmission parameters is best-effort (where not stated 
            otherwise) and the resulting values of the transmission parameters are 
            provided in the updated tpDataListToModify parameter. If the parameter is "not 
            best effort" then the whole operation will be rejected and the appropriate 
            exception thrown (see exceptions below).</p>
							<p>This parameter may be used by the NMS to determine
            the number of server layer CTPs to create for the specified FTP.
            An empty list means that the number of server layer CTPs 
            is determined by the EMS.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createFloatingTerminationPointResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the createFloatingTerminationPoint operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of TPs with associated parameters to be applied.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="theFtp" type="ftp:FloatingTerminationPointType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The new floating termination point. The EMS is responsible for guaranteeing
            uniqueness of the name of the FTP. The name may be specified
            by the NMS in the createData.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="errorReason" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Specifies the creation error(s) if any.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createFloatingTerminationPointException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the createFloatingTerminationPoint operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:capacityExceeded"/>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:objectInUse"/>
						<xsd:element ref="msg:unableToComply"/>
						<xsd:element ref="msg:userlabelInUse"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="createGroupTerminationPointRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the createGroupTerminationPoint operation</p>
				<p>The NMS uses this operation to request the creation of a GTP see SD1-3_BundledSNC.pdf 
   for further information on GTP usage). The NMS can either specify the list
   of CTPs comprising the GTP (the list is placed in the listOfTPs parameter) 
   or, in the case of contiguous CTPs of the same layerRate, the NMS may list 
   the first CTP (in the initialCTPname parameter) and the number of 
   following CTPs (in the numberOfCTPs parameter). The NMS 
   may also provide the EMS with the flexibility to decide the list of CTPs  
   by using the gtpEffort parameter. In this flexible mode the EMS uses the 
   listOfTPs parameter or the initialCTPname/ numberOfCTPs parameters to 
   determine the total requested bandwidth but it may return a GTP (newGTP 
   parameter) with a different set of CTPs than those indicated in the 
   original createGTP request. Note that this mode allows for the GTP 
   components to be instantiated at a later time by the ME (e.g., upon 
   detection of user's signal). Therefore the operation may successfully 
   return a newGTP with an empty listOfTPs attribute (to be updated at a 
   later time once the component CTPs are created in the ME).</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>			
				<xsd:element name="createData" type="tns:GroupTerminationPointCreateDataType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Structure describing the group termination point structure to be created.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>	
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createGroupTerminationPointResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the createGroupTerminationPoint operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="newGtp" type="gtp:GroupTerminationPointType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This output parameter contains the newly created GTP.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createGroupTerminationPointException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the createGroupTerminationPoint operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:objectInUse"/>
						<xsd:element ref="msg:unableToComply"/>
						<xsd:element ref="msg:userlabelInUse"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="createTerminationPointPoolRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the createTerminationPointPool operation</p>
				<p>This operation .</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>		
				<xsd:element name="createData" type="tns:TerminationPointPoolCreateDataType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Structure describing the termination point pool structure to be created.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>	
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	
	<xsd:element name="createTerminationPointPoolResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the createTerminationPointPool operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="newTpPool" type="tppool:TerminationPointPoolType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This parameter contains the newly created TPPool.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createTerminationPointPoolException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the createTerminationPointPool operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:capacityExceeded"/>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:objectInUse"/>
						<xsd:element ref="msg:unableToComply"/>
						<xsd:element ref="msg:userlabelInUse"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="deleteFloatingTerminationPointRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the deleteFloatingTerminationPoint operation</p>
				<p>This operation allows an NMS to request the deletion of a floating termination point from the EMS. The operation may be used to delete "CPTP" FTPs.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="ftpName" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the termination point to be deleted.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of TPs with associated parameters to be applied.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deleteFloatingTerminationPointResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the deleteFloatingTerminationPoint operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tpDataListToModify" type="tpdata:TerminationPointDataListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of TPs with associated parameters to be applied.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="errorReason" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>In case a "best effort" parameter could not be set
            an indication of the fault reason is provided by the EMS.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deleteFloatingTerminationPointException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the deleteFloatingTerminationPoint operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:objectInUse"/>
						<xsd:element ref="msg:unableToComply"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="deleteGroupTerminationPointRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the deleteGroupTerminationPoint operation</p>
				<p>This operation is used to delete a GTP (see SD1-3 Bundled SNC overview for further information on GTP usage). An attempt to delete a GTP that is involved in a cross connection or SNC should be rejected by the EMS. This operation is idempotent. If the service is called with the name of a non-existent GTP, it will succeed.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="gtpName" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>name of GTP to be deleted.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deleteGroupTerminationPointResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the deleteGroupTerminationPoint operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType/>
	</xsd:element>
	<xsd:element name="deleteGroupTerminationPointException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the deleteGroupTerminationPoint operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:objectInUse"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="deleteTerminationPointPoolRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the deleteTerminationPointPool operation</p>
				<p>The delete TPPool operation is used to delete a TPPool. This operation is idempotent.  If the service is called with the name of a non-existent TPPool, it will succeed.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tpPoolName" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the TPPool to be deleted.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deleteTerminationPointPoolResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the deleteTerminationPointPool operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType/>
	</xsd:element>
	<xsd:element name="deleteTerminationPointPoolException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the deleteTerminationPointPool operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:objectInUse"/>
						<xsd:element ref="msg:unableToComply"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="modifyGroupTerminationPointRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the modifyGroupTerminationPoint operation</p>
				<p>This operation is used to add TPs to or delete TPs from a GTP (see SD1-3_BundledSNC.pdf  for further information on GTP usage). For a given request, the NMS can only add or delete CTPs, not both. It is not possible to add a CTP that is already involved in a cross 
connection or SNC, or that is part of another GTP. Attempts to modify a GTP 
that is involved in a cross connection (or SNC) should be rejected by the EMS. The operation is best-effort, i.e., the EMS will add or delete as many of the identified CTPs as possible. If the service is called with the name of a non-existent GTP or CTP, it will fail.</p>
				<p>If the NMS created a GTP with gtpEffort equal to EFFORT_SAME, this also implies that the EMS will not modify on its own, i.e., the EMS will only modify the GTP if requested by the NMS via the modifyGTP operation.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="gtpName" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the GTP to be modified.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="tpRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>names of the CTPs to be added or deleted.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="actionType" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>an indication of whether the listed TPs are to be added or deleted. Two values are possible "add" or "delete".</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="modifyGroupTerminationPointResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the modifyGroupTerminationPoint operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="modifiedGtp" type="gtp:GroupTerminationPointType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>the structure for the modified GTP.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="modifyGroupTerminationPointException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the modifyGroupTerminationPoint operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:objectInUse"/>
						<xsd:element ref="msg:unableToComply"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="modifyTerminationPointPoolRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the modifyTerminationPointPool operation</p>
				<p>The modify TPPool operation is used to add TPs/GTPs to or delete TPs/GTPs from a TPPool.  For a given request, the NMS can only add TPs/GTPs or delete TPs/GTPs, not both.  When TPs/GTPs are to be added, all the specified TPs/GTPs shall be contained in MEs of the TPPool's Subnetwork.  It is not possible to add a TP/GTP that is part of another TPPool or GTP.  The operation is best-effort, i.e., the EMS will add or delete as many of the identified TPs as possible. If the service is called with the name of a non-existent TPPool or TP or GTP, it will fail.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tpPoolName" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the TPPool to be modified.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="containedMembersRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The names of the TPs or GTPs to be added or deleted.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="actionType" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>an indication of whether the listed TPs or GTPs are to be added or deleted. Two values are possible "add" or "delete".</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="modifyTerminationPointPoolResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the modifyTerminationPointPool operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="modifiedTpPool" type="tppool:TerminationPointPoolType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>the structure for the modified TPPool.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="modifyTerminationPointPoolException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the modifyTerminationPointPool operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:capacityExceeded"/>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:objectInUse"/>
						<xsd:element ref="msg:unableToComply"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="setTerminationPointDataRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the setTerminationPointData operation</p>
				<p>This operation allows the NMS to set parameters on a specified Termination Point (CTP, PTP or FTP). See SD1-16_LayeredParameters.pdf  for further information.</p>
				<p>This operation is best effort (except where specified otherwise for a 
   particular parameter). The results of the operation are returned
   so that the NMS is aware of what modifications succeeded.</p>
				<p>If the source TP of a broadcast system is used as input, then
   the entire multipoint system will be affected based on the new
   parameter values for the source TP.</p>
				<p>The tpMappingMode may be set with this operation. When the mode is
   set to TM_TERMINATED_AND_AVAILABLE_FOR_MAPPING, the EMS will terminate the
   specified CTP. In this case the EMS must create the specified CTP on 
   the NE if it does not actually exist. 
   Setting the tpMappingMode of an ATM VP or VC CTP can only be done if
   the CTP has been created. Note that the tpMappingMode can be set
   only on the ingress and egress CTPs of an ATM SNC since they are the only
   ones which may not be cross-connected.</p>
				<p>No change to tpMappingMode or trafficDescriptors will take place if
   there is any active cross connect (NE cross connect)
   using the CTP passed in parameter.</p>
				<p>The transmissionParams is a "delta" list that needs to be
   applied to the specified TP, i.e. only a subset of the
   parameters may be specified in the list, in which case only those
   should be applied in the NE. Transmission parameters are used to associate 
   a TCA profile with a TP using this service. In this case there are 
   potentially additional failure modes (see exceptions).</p>
				<p> The assignment of a Transmission Descriptor (TMD) to a Termination Point (TP) 
   as egress or ingress TMD by using the TMD's name amounts to an overwriting 
   of the layered transmission parameters of the TP by the layered transmission 
   parameters of the TMD, and to an overwriting of the additional info parameters
   of the TP by the "additional TP information" parameters of the TMD. </p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="tpInfo" type="tpdata:TerminationPointDataType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Details of modifications required..</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="setTerminationPointDataResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the setTerminationPointData operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="modifiedTp" type="tp:TerminationPointType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Result of modification.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="setTerminationPointDataException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the setTerminationPointData operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:unableToComply"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- Types -->
	<xsd:simpleType name="GroupTerminationPointEffortType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The GTP effort is a statement of the requirement of the list of CTPs
   that a new GTP. If EFFORT_SAME is specified then the EMS must create the 
   GTP with the exact same list of CTPs as provided with the GTP creation 
   request. Further, if the NMS uses EFFORT_SAME, it is assume that the EMS 
   will not modify the CTP list comprising the GTP at some later point (unless 
   requested by the NMS via the modifyGTP operation). If EFFORT_WHATEVER is 
   specified then the EMS may comply with the total bandwidth requirement by 
   using a different set of CTPs.</p>
				<p>If the NMS requests a GTP with gtpEffort equal to EFFORT_SAME, this also 
   implies that the EMS will not modify on its own, i.e., the EMS will only 
   modify the GTP if requested by the NMS via the modifyGTP operation.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="EFFORT_WHATEVER"/>
			<xsd:enumeration value="EFFORT_SAME"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- ================= -->
	<xsd:complexType name="FloatingTerminationPointCreateDataType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The read/write attributes required for the creation of a
        floating termination point on the EMS are packed together in an 
        FTPCreateData structure which the NMS will pass to the EMS at 
        FTP creation time.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="crcd:CommonResourceCreateDataType">
				<xsd:sequence>
					<xsd:element name="equipmentRef" type="nam:NamingAttributeType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>The name of the equipment containing the FTP.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ingressTmdRef" type="nam:NamingAttributeType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>The FTP may have an optional reference to an ingress (incoming) Transmission Descriptor.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="egressTmdRef" type="nam:NamingAttributeType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>The FTP may have an optional reference to an egress (outgoing) Transmission Descriptor.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="tpMappingMode" type="com:TerminationModeType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Within the facade definition, the CTP/FTP can act as an 
				aggregate of associated G.805 TCPs, G.805 Termination Functions and G.805 
				CPs at one or more LayerRates. The CTP is contained within a PTP or FTP.</p>
								<p>The TerminationMode attribute indicates and controls the connection of
				the named CP at a specified LayerRate to the dedicated G.805 TCP and 
				associated G.805 Termination Function at the same LayerRate within the 
				CTP/FTP.</p>
								<p>The TerminationMode is used, for example, to control the Termination and
				mapping to VT1.5 of an STS1 Trail within an OC3 port. This capability
				could potentially be used to terminate an STS1 backbone Trail within 
				a lower order mux that has the capability to alternatively 
				cross-connect the STS1 unterminated. The same capability is used in SDH
				and is potentially applicable to any LayerRate.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="direction" type="com:DirectionalityType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>The direction of the termination point.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element ref="lp:transmissionParametersList" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>A list of layer rates on which connectivity can be established in the
				flow domain together with a set of connectionless technology parameters for 
				each layer rate. Refer to chapter "Connectionless Technology Parameters" of the
				supporting document LayeredParameters.pdf for details of the currently defined
				connectionless parameters.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ================= -->
		<xsd:complexType name="GroupTerminationPointCreateDataType">
		<xsd:annotation>
			<xsd:documentation>
				<p> .</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="crcd:CommonResourceCreateDataType">
				<xsd:sequence>		
				<xsd:element name="containingMeRef" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>The name of the Managed Element containing the GTP</xsd:documentation>
					</xsd:annotation>
				</xsd:element>					
				<xsd:element name="tpRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>the list of CTPs that comprise the GTP.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="initialCtpRef" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>in cases where the CTPs are contiguous and of the same layerRate, this parameter is used to indicate the first CTP in the group. This parameter is used in lieu of the listOfTPs parameter.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="numberOfCtp" type="xsd:long" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This parameter is used in conjunction with the initialCTPname parameter. It indicates the number of contiguous CTPs that follow the initial CTP. It equals 1 minus the total number of CTPs in the GTP.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="gtpEffort" type="tns:GroupTerminationPointEffortType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This parameter is used to indicate if the GTP bandwidth specification can be met with a different list of CTPs.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
					<xsd:element name="isReportingAlarms" type="xsd:boolean" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Provides an indication whether alarm reporting for this instance is active or not.</p>
							 </xsd:documentation>
						</xsd:annotation>
					</xsd:element>				
				<xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This is a container for all vendor extensions.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ================= -->
		<xsd:complexType name="TerminationPointPoolCreateDataType">
		<xsd:annotation>
			<xsd:documentation>
				<p> .</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="crcd:CommonResourceCreateDataType">
				<xsd:sequence>		
				<xsd:element name="userLabel" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>the userLabel for the TpPool.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="forceUniqueness" type="xsd:boolean" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Specifies whether uniqueness of the userLabel is required amongst TpPools of the MLSN.  The operation will fail if userLabel is already in use.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="owner" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>the owner of the TpPool.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="containingMlsnRef" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The subnetwork that shall contain the TPPool to be created.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="containedMembersRefList" type="nam:NamingAttributeListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The list of TPs or GTPs that shall comprise the TPPool.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element ref="lp:transmissionParametersList" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The common layers and transmission parameters the above-specified Contained TPs, or TPs contained in Contained GTPs, are required to have (e.g., ATM VP layer with prescribed traffic characteristics).</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="descriptionOfUse" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>A description of the specific use of the TP pool, in particular how its members are collected and administered. It could include, for example, the name of a TP with the meaning that all TP pool members have to be collected from the set of potential client CTPs of this TP.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This is a container for all vendor extensions.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>	
</xsd:schema>
