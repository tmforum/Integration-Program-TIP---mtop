<?xml version="1.0" encoding="UTF-8"?>
<!-- mTOP DDP - OM ResourceTroubleManagement - Copyright TeleManagement Forum 2008 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/rtm/xsd/asapc/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:msg="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" xmlns:lr="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:crcd="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" xmlns:crmd="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" xmlns:asap="http://www.tmforum.org/mtop/nra/xsd/asap/v1" xmlns:asa="http://www.tmforum.org/mtop/nra/xsd/asa/v1" targetNamespace="http://www.tmforum.org/mtop/rtm/xsd/asapc/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
	<xsd:annotation>
		<xsd:documentation>
			<p>DDP: ResourceTroubleManagement</p>
			<p>Module:  Message XSD Module</p>
			<p>Description: This module contains the XML Schema type definitions of all the mTOP AsapControl SI XML message structures.</p>
		</xsd:documentation>
	</xsd:annotation>
	<!-- ================ -->
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/msg/v1" schemaLocation="../../../Framework/IIS/xsd/MessageDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lay/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayerRates.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/crcd/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/CommonResourceCreateDataType.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/crmd/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/CommonResourceModifyDataType.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/asap/v1" schemaLocation="../../../NetworkResourceAssurance/IIS/xsd/Asap.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/asa/v1" schemaLocation="../../../NetworkResourceAssurance/IIS/xsd/Asa.xsd"/>
	<!-- ================ -->
	<xsd:element name="assignAlarmSeverityAssignmentProfileRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the assignAlarmSeverityAssignmentProfile operation</p>
				<p>This operation assigns the addressed ASAP to the addressed resource, 
       i.e. the asapRef is updated accordingly. The formerly referenced ASAP, 
       if any, is deassigned. For TPs, it is necessary to indicate also the layer 
       rate the ASAP will apply.</p>
				<p>This operation causes an alarm re-evaluation of the already detected 
       defects according to the following rules.</p>
				<p>If alarms are reportable:<ul>
						<li>if the severity changes from any of critical, major, minor, warning, to 
       not alarmed, then an alarm notification with <i>cleared</i> is sent and the 
       alarm is no longer available for any alarm retrieval operation.</li>
						<li>if the severity changes from not alarmed to any of critical, major, 
       minor, warning, then an alarm notification with the new 
       <i>perceivedSeverity</i> is sent (with the current OS/NE time) and the 
       alarm is available for any alarm retrieval operation.</li>
						<li>if the severity changes from any of critical, major, minor, warning, to 
       any of critical, major, minor, warning, then the alarm re-evaluation 
       process is not performed.</li>
					</ul>
				</p>
				<p>Note that an alarm is reportable by NE/OS:<ul>
						<li> when for PTP, CTP, FTP AlarmReporting = "on"</li>
						<li> when for SNC, TopologicalLink, Equipment, EquipmentHolder, GTP 
       alarmReportingIndicator = true</li>
						<li> always for all other objects which do not have any alarm reporting 
       attribute</li>
					</ul>
				</p>.
       <p>Note that the clear notification is not send in case of transient 
       events.</p>
				<p>If the addressed resource originates alarms from within the NE, then 
       this operation could imply the "activation" of the ASAP instance and 
       functionality over the proper NE. E.g. the OS will download the ASAP to a 
       given NE only once the ASAP is assigned for the first time to a resource of 
       that NE.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="asapRef" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the ASAP object to be assigned.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="resourceRef" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the resource to assign the ASAP to.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="layerRate" type="lr:LayerRateType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The TP layer rate the 
               ASAP object is assigned to. If the resource is not a TP, then the layerRate 
               value shall be LR_Not_Applicable.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This is a container for all vendor extensions.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="assignAlarmSeverityAssignmentProfileResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the assignAlarmSeverityAssignmentProfile operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This is a container for all vendor extensions.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="assignAlarmSeverityAssignmentProfileException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the assignAlarmSeverityAssignmentProfile operation.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:unableToComply"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="createAlarmSeverityAssignmentProfileRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the createAlarmSeverityAssignmentProfile operation.</p>
				<p>This operation creates a new ASAP object, named by the OS, with the 
         values described by the input parameters. The operation fails if the 
         maximum number of ASAPs for OS has been reached.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="asapCreateData" type="tns:AlarmSeverityAssignmentProfileCreateDataType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Information about the ASAP to be created.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createAlarmSeverityAssignmentProfileResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the createAlarmSeverityAssignmentProfile operation.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="newAsap" type="asap:AlarmSeverityAssignmentProfileType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Result of the creation.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="createAlarmSeverityAssignmentProfileException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the createAlarmSeverityAssignmentProfile operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:capacityExceeded"/>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:unableToComply"/>
						<xsd:element ref="msg:userlabelInUse"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="deassignAlarmSeverityAssignmentProfileRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the deassignAlarmSeverityAssignmentProfile operation</p>
				<p>This operation deassigns the ASAP from the addressed resource, i.e. the 
         asapRef is updated to empty string. For TPs, it is necessary to 
         indicate also the layer rate, in order to identify the ASAP to be 
         deassigned.</p>
				<p>This operation causes an alarm re-evaluation of the already detected 
         defects according to same rules as ASAP assignment, considering as "newly 
         assigned ASAP" the default alarm severity assignment.</p>
				<p>If the addressed resource originates alarms from within the NE, then 
         this operation could imply the "deactivation" of the ASAP instance and 
         functionality over the proper NE. E.g. the OS will remove the ASAP from a 
         given NE only when the ASAP is no longer assigned to any resource of that NE.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="resourceRef" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the resource to deassign the ASAP from.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="layerRate" type="lr:LayerRateType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The TP layer rate is 
             necessary to identify the ASAP instance to be deassigned. If the resource 
             is not a TP, then the layerRate value shall be LR_Not_Applicable.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This is a container for all vendor extensions.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deassignAlarmSeverityAssignmentProfileResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the deassignAlarmSeverityAssignmentProfile operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This is a container for all vendor extensions.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deassignAlarmSeverityAssignmentProfileException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the deassignAlarmSeverityAssignmentProfile operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:unableToComply"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="deleteAlarmSeverityAssignmentProfileRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the deleteAlarmSeverityAssignmentProfile operation</p>
				<p>This operation deletes the addressed ASAP. The operation fails if at 
         least one resource is pointing to this ASAP. Moreover the OS could refuse 
         this operation, in case the addressed ASAP is <b>fixed</b>.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="asapRef" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the ASAP object to be delete.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This is a container for all vendor extensions.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deleteAlarmSeverityAssignmentProfileResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the deleteAlarmSeverityAssignmentProfile operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>This is a container for all vendor extensions.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="deleteAlarmSeverityAssignmentProfileException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the deleteAlarmSeverityAssignmentProfile operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:entityNotFound"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:objectInUse"/>
						<xsd:element ref="msg:unableToComply"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:element name="modifyAlarmSeverityAssignmentProfileRequest">
		<xsd:annotation>
			<xsd:documentation>
				<p>Request message structure of the modifyAlarmSeverityAssignmentProfile operation</p>
				<p>This operation modifies the addressed ASAP according to the input 
         parameters. This operation does not modify any current ASAP assignment. The 
         specified alarmSeverityAssignmentList will completely replace the current 
         one. OS could refuse this operation in case the addressed ASAP is 
        fixed.</p>
				<p>The modification of the ASAP does not trigger any alarm re-evaluation of 
        the already detected defects. This because such re-evaluation process may 
         involve a big number of managed resources across the network.</p>
				<p>If the addressed resource originates alarms from within the NE, then 
         this operation could imply the modification of the ASAP instance and 
         functionality over the proper NE.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="asapRef" type="nam:NamingAttributeType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>The name of the ASAP object to be modified.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="asapModifyData" type="tns:AlarmSeverityAssignmentProfileModifyDataType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Information about the ASAP to be modified.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="modifyAlarmSeverityAssignmentProfileResponse">
		<xsd:annotation>
			<xsd:documentation>
				<p>Response message structure of the modifyAlarmSeverityAssignmentProfile operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="modifiedAsap" type="asap:AlarmSeverityAssignmentProfileType" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							<p>Result of the modification.</p>
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
	<xsd:element name="modifyAlarmSeverityAssignmentProfileException">
		<xsd:annotation>
			<xsd:documentation>
				<p>Exception message structure of the modifyAlarmSeverityAssignmentProfile operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexType>
			<xsd:complexContent>
				<xsd:restriction base="msg:AllExceptionsType">
					<xsd:choice>
						<xsd:element ref="msg:commLoss"/>
						<xsd:element ref="msg:internalError"/>
						<xsd:element ref="msg:invalidInput"/>
						<xsd:element ref="msg:notImplemented"/>
						<xsd:element ref="msg:unableToComply"/>
						<xsd:element ref="msg:userlabelInUse"/>
					</xsd:choice>
				</xsd:restriction>
			</xsd:complexContent>
		</xsd:complexType>
	</xsd:element>
	<!-- ================ -->
	<xsd:complexType name="AlarmSeverityAssignmentProfileCreateDataType">
		<xsd:annotation>
			<xsd:documentation>
				<p>Common data structure used when ASAP object is created by the OS</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="crcd:CommonResourceCreateDataType">
				<xsd:sequence>
					<xsd:element name="asaList" type="asa:AlarmSeverityAssignmentListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Each element of this sequence specifies the probable cause (plus 
             optionally the probableCauseQualifier and / or the nativeProbableCause) the 
             three severities to be assigned.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ================ -->
	<xsd:complexType name="AlarmSeverityAssignmentProfileModifyDataType">
		<xsd:annotation>
			<xsd:documentation>
				<p>Data structure used when ASAP object is modified by the OS</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="crmd:CommonResourceModifyDataType">
				<xsd:sequence>
					<xsd:element name="asaList" type="asa:AlarmSeverityAssignmentListType" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								<p>Each element of this sequence specifies the probable cause (plus 
             optionally the probableCauseQualifier and / or the nativeProbableCause) the 
             three severities to be assigned.</p>
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
