<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2011 sp1 (http://www.altova.com) by Jessie Jewitt (Ciena) -->
<!-- mTOP DDP - OM Test Management - Copyright TeleManagement Forum 2014 -->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/mtop/tm/xsd/test/v1" xmlns:coi="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" xmlns:nam="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" xmlns:gen="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" xmlns:lp="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" xmlns:tpdata="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" xmlns:ituArc="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" targetNamespace="http://www.tmforum.org/mtop/tm/xsd/test/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
	<xsd:annotation>
		<xsd:documentation>
			<p>DDP: Data Model Test </p>
			<p>Module: XSD Module</p>
			<p>Description: This module contains the XML Schema type definition of the mTOP XML Test Structures</p>
		</xsd:documentation>
	</xsd:annotation>
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/gen/v1" schemaLocation="../../../Framework/IIS/xsd/GeneralDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/nam/v1" schemaLocation="../../../Framework/IIS/xsd/NamingDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/fmw/xsd/coi/v1" schemaLocation="../../../Framework/IIS/xsd/CommonObjectInfo.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrb/xsd/lp/v1" schemaLocation="../../../NetworkResourceBasic/IIS/xsd/LayeredParameters.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nra/xsd/ituArc/v1" schemaLocation="../../../NetworkResourceAssurance/IIS/xsd/ITU-T-ArcDefinitions.xsd"/>
	<xsd:import namespace="http://www.tmforum.org/mtop/nrf/xsd/tpdata/v1" schemaLocation="../../../NetworkResourceFulfillment/IIS/xsd/TpData.xsd"/>
	<!-- ================ -->
	<xsd:simpleType name="TestModeType">
		<xsd:annotation>
			<xsd:documentation>
				<p>Indication of whether the test was started proactively or on-demand. The default is on-demand</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="PROACTIVE"/>
			<xsd:enumeration value="ONDEMAND"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- ================ -->
	<xsd:simpleType name="TimeType">
		<xsd:annotation>
			<xsd:documentation>
				<p>Specification of whether the time is fixed, immediate, or relative</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="FIXED"/>
			<xsd:enumeration value="IMMEDIATE"/>
			<xsd:enumeration value="RELATIVE"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- ================ -->
	<xsd:simpleType name="TestFilterType">
		<xsd:annotation>
			<xsd:documentation>
				<p> The filter on the get Test results indicating: ALL  (return the entire test object), or MEASURES (return only the measures) </p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="ALL"/>
			<xsd:enumeration value="MEASURES"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- ================ -->
	<xsd:simpleType name="TestStateType">
		<xsd:annotation>
			<xsd:documentation>
				<p>Specifies the possible states of the test</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="STARTING"/>
			<xsd:enumeration value="ONGOING"/>
			<xsd:enumeration value="COMPLETED"/>
			<xsd:enumeration value="STOPPED"/>
			<xsd:enumeration value="FAILED"/>
			<xsd:enumeration value="UNKNOWN"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- ================ -->
	<xsd:complexType name="TestTypeType">
		<xsd:annotation>
			<xsd:documentation>
				<p>Indication of the type of test. See BA for test definitions.Standard value enum types are defined. VENDOR_EXT type can be used to extend these values.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:simpleContent>
			<xsd:extension base="tns:TestTypeEnumType">
				<xsd:attribute name="extension" type="xsd:string" use="optional"/>
			</xsd:extension>
		</xsd:simpleContent>
	</xsd:complexType>
	<!-- ================= -->
	<xsd:simpleType name="TestTypeEnumType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="VENDOR_EXT"/>
			<xsd:enumeration value="AIS"/>
			<xsd:enumeration value="CCM"/>
			<xsd:enumeration value="CV"/>
			<xsd:enumeration value="CFM_LB"/>
			<xsd:enumeration value="CFM_LT"/>
			<xsd:enumeration value="EFM_LB"/>
			<xsd:enumeration value="LCK"/>
			<xsd:enumeration value="SE_FL"/>
			<xsd:enumeration value="SES_FL"/>
			<xsd:enumeration value="OW_FD"/>
			<xsd:enumeration value="OW_FDV"/>
			<xsd:enumeration value="TW_FD"/>
			<xsd:enumeration value="TW_FDV"/>
			<xsd:enumeration value="DE_FL"/>
			<xsd:enumeration value="IP_PING"/>
			<xsd:enumeration value="IP_TRT"/>
			<xsd:enumeration value="PPPoE"/>
			<xsd:enumeration value="PCLT"/>
			<xsd:enumeration value="CETI"/>
			<xsd:enumeration value="CETO"/>
			<xsd:enumeration value="RFC2544"/>
			<!-- Alarm Indication Signal -->
			<!-- Connectivity Check Monitoring -->
			<!--Connectivity Verification -->
			<!--CFM Loopback -->
			<!-- CFM Linktrace-->
			<!-- EFM Loopback-->
			<!-- Locked Signal -->
			<!-- Single-End Frame Loss-->
			<!-- Single-End Synthetic Frame Loss-->
			<!--One way frame delay -->
			<!--One way frame delay variation -->
			<!-- Two way frame delay -->
			<!-- Two way frame delay variation-->
			<!-- Dual end frame loss -->
			<!-- IP Ping-->
			<!-- IP Traceroute-->
			<!-- PPP over Ethernet-->
			<!--POTS Circuit Line Test-->
			<!-- Caller emulation test incoming-->
			<!--Caller emulation test outgoing -->
		</xsd:restriction>
	</xsd:simpleType>
	<!-- ================ -->
	<xsd:simpleType name="TestAdminStateType">
		<xsd:annotation>
			<xsd:documentation>
				<p>Specifies the administrative state of the test</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="LOCKED"/>
			<xsd:enumeration value="UNLOCKED"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- ================ -->
	<xsd:simpleType name="ValueTypeType">
		<xsd:annotation>
			<xsd:documentation>
				<p>A test measure value type</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="INTEGER"/>
			<xsd:enumeration value="STRING"/>
			<xsd:enumeration value="FLOAT"/>
			<xsd:enumeration value="DOUBLE"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- ================ -->
	<xsd:simpleType name="ThresholdRuleConditionType">
		<xsd:annotation>
			<xsd:documentation>
				<p>A test measure value type</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="RAISE"/>
			<xsd:enumeration value="CLEAR"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- ================ -->
	<xsd:simpleType name="ThresholdRuleSeverityType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The severity associated to the threshold</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="INDETERMINATE"/>
			<xsd:enumeration value="CRITICAL"/>
			<xsd:enumeration value="MAJOR"/>
			<xsd:enumeration value="MINOR"/>
			<xsd:enumeration value="WARNING"/>
		</xsd:restriction>
	</xsd:simpleType>
	<!-- ================= -->
	<xsd:complexType name="TimePeriodType">
		<xsd:sequence>
			<xsd:element name="startDateTime" type="xsd:anyType" minOccurs="0"/>
			<xsd:element name="endDateTime" type="xsd:anyType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ================= -->
	<xsd:complexType name="TestParameterValueInUseType">
		<xsd:annotation>
			<xsd:documentation>
				<p>A Test is configured by Test Parameter Values </p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="value" type="xsd:string"/>
			<!-- resource test parameter value -->
			<xsd:element name="rtpRef" type="xsd:string"/>
			<!-- name of the resource test parameter -->
		</xsd:sequence>
	</xsd:complexType>
	<!-- ================= -->
	<xsd:complexType name="EntityUnderTestList">
		<xsd:annotation>
			<xsd:documentation>
				<p> a list of entities under test. These may be resources or services</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:entityUnderTest" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:element name="entityUnderTest" type="tns:EntityUnderTestType" nillable="true"/>
	<xsd:complexType name="EntityUnderTestType">
		<xsd:annotation>
			<xsd:documentation>
				<p>A reference to an entity under test, and the configuration parameters and resulting metrics on the entity </p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="entityTestRef" type="nam:NamingAttributeType" minOccurs="0"/>
			<xsd:element name="configuredByList" type="tns:TestParameterValueInUseType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>
						<p>Specifies a list of individual test parameters (by reference)  and their associated test parameter values.</p>
						<p> The standard parameter names and valid values are those provided in SD2-22 TestParameters.pdf, and are passed in real-time over the interface upon starting the test.</p>
						<p>There may be test parameters and associated values that are also passed, by reference, in the test specification.  If a parameter/value is found in both places, and is marked as "can be overriden", then the value passed in the configuredByList overrides the value in the specification. If it is marked "extensible", it extends the values defined in the test spec.</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testSpecification" type="nam:NamingAttributeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>Indicates the name of a test specification (TS) that is to be used to describe how the test should be configured, and what measures should be taken as a result of executing the test. The TS  may contain resource test parameters and their associated values and/or resource test measures. </p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testMeasuresList" type="tns:TestMeasuresListType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>This attribute specifies a list of individual  test measures that are expected to result from the execution of a test. For each measure a set of threshold rules may be defined that indicate under which condition(s) a threshold is considered to be passed, and the expected consequence(s).</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testMeasureValuesList" type="tns:TestMeasureValuesListType" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ================= -->
	<xsd:complexType name="TestMeasureValuesListType">
		<xsd:annotation>
			<xsd:documentation>
				<p> a list of test measure values</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:testMeasureValues" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:element name="testMeasureValues" type="tns:TestMeasureValueType" nillable="true"/>
	<xsd:complexType name="TestMeasureValueType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The test measure value that is associated to a test measure definition </p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="tmRef" type="xsd:string"/>
			<!-- name of the associated resource test measure defintion -->
			<xsd:element name="value" type="xsd:string"/>
			<!-- test measure value -->
			<xsd:element name="validityIndicator" type="xsd:boolean"/>
			<!-- "true" indicates value is  valid; "false" indicates the value is suspect -->
		</xsd:sequence>
	</xsd:complexType>
	<!-- ================ -->
	<xsd:complexType name="TestSpecVersionType">
		<xsd:annotation>
			<xsd:documentation>
				<p>This is used to identify the version of the service specification</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="testSpecRevisionName" type="xsd:string" minOccurs="0"/>
			<xsd:element name="testSpecRevisionNumber" type="xsd:string"/>
			<xsd:element name="testSpecRevisionReason" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ================ -->
	<xsd:element name="testSpecRelationshipType" type="tns:TestSpecRelationshipType"/>
	<xsd:complexType name="TestSpecRelationshipType">
		<xsd:annotation>
			<xsd:documentation>
				<p>  Indicates relationship of a Test Spec to another Test Spec </p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="testSpecRef" type="nam:NamingAttributeType"/>
			<xsd:element name="type" type="xsd:string" minOccurs="0"/>
			<xsd:element name="validFor" type="tns:TimePeriodType" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:complexType name="TestListType">
		<xsd:annotation>
			<xsd:documentation>
				<p> a list of test names and types returned from creation and activation of the flow domain fragment / subnetwork connection / RFS and CFS</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:testsReturned" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:element name="testsReturned" type="tns:TestsReturnedType" nillable="true"/>
	<xsd:complexType name="TestsReturnedType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The test name and test type are returned for each test successfully started </p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="testName" type="xsd:string"/>
			<!-- name of the proactive test -->
			<xsd:element name="testType" type="tns:TestTypeType" minOccurs="0"/>
			<!-- test type -->
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:complexType name="SetTestDataListType">
		<xsd:annotation>
			<xsd:documentation>
				<p> a list of tests to execute proactively on a FDFR, SNC, or Service</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:testSetData" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:element name="testSetData" type="tns:TestSetDataType" nillable="true"/>
	<xsd:complexType name="TestSetDataType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The attributes required when creating and activating an FDFr/SNC/RFS/CFS in order to create the test object</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="testName" type="nam:NamingAttributeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>An indication of whether the test is being run pro-actively or on-demand.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testMode" type="tns:TestModeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>An indication of whether the test is being run pro-actively or on-demand.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testType" type="tns:TestTypeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>An indication of  the type of test. See the associated BA for standard test types. Vendor extensions are allowed.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testAdminState" type="tns:TestAdminStateType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>The test administrative state, which may be LOCKED or UNLOCKED</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="configuredByList" type="tns:TestParameterValueInUseType" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>
						<p>Specifies a list of individual resource test parameters (by reference)  and their associated resource test parameter values.</p>
						<p> The standard parameter names and valid values are those provided in SD2-22 TestParameters.pdf, and are passed in real-time over the interface upon starting the test.</p>
						<p>There may be resource test parameters and associated values that are also passed, by reference, in the resource test specification.  If a parameter/value is found in both places, and is marked as "can be overriden", then the value passed in the configuredByList overrides the value in the specification.</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testSpecification" type="nam:NamingAttributeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>Indicates the name of a resource test specification (RTS) that is to be used to describe how the test should be configured, and what measures should be taken as a result of executing the test. The RTS  may contain resource test parameters and their associated values and/or resource test measures. </p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testMeasuresList" type="tns:TestMeasuresListType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>This attribute specifies a list of individual resource test measures that are expected to result from the execution of a test. For each measure a set of threshold rules may be defined that indicate under which condition(s) a threshold is considered to be passed, and the expected consequence(s).</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ================ -->
	<xsd:element name="testSpecification" type="tns:TestSpecificationType"/>
	<xsd:complexType name="TestSpecificationType">
		<xsd:complexContent>
			<xsd:annotation>
				<xsd:documentation>
					<p>represenst a set of resource test parameters and their associated resource test parameter values that are used to configure a resource test. The specification may also be used as a means to validate test parameters passed over the interface directly when the test is instantiated.</p>
				</xsd:documentation>
			</xsd:annotation>
			<xsd:extension base="coi:CommonObjectInfoType">
				<xsd:sequence>
					<xsd:element name="testType" type="tns:TestTypeType" minOccurs="0"/>
					<xsd:element name="testSpecVersion" type="tns:TestSpecVersionType" minOccurs="0"/>
					<xsd:element name="testParameterList" type="tns:TestParameterListType" minOccurs="0"/>
					<xsd:element name="testMeasuresList" type="tns:TestMeasuresListType" minOccurs="0"/>
					<xsd:element name="containedByTestSpecRef" type="tns:TestSpecRelationshipType" minOccurs="0" maxOccurs="1"/>
					<xsd:element name="containsTestSpecRefList" type="tns:TestSpecRelationshipType" minOccurs="0" maxOccurs="unbounded"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ================ -->
	<xsd:element name="test" type="tns:TestType"/>
	<xsd:complexType name="TestType">
		<xsd:complexContent>
			<xsd:annotation>
				<xsd:documentation>
					<p>test object shall represent the execution of a particular test against a given entity(s), and given set of test parameters, in accordance with a specified schedule, and a list of desired test measures. It shall be instantiated whenever a test is requested, either on-demand or pro-actively. </p>
				</xsd:documentation>
			</xsd:annotation>
			<xsd:extension base="coi:CommonObjectInfoType">
				<xsd:sequence>
					<xsd:element name="testMode" type="tns:TestModeType" minOccurs="0"/>
					<xsd:element name="testType" type="tns:TestTypeType" minOccurs="0"/>
					<xsd:element name="testAdminState" type="tns:TestAdminStateType" minOccurs="0"/>
					<xsd:element name="testSchedule" type="tns:TestScheduleType" minOccurs="0"/>
					<xsd:element name="testState" type="tns:TestStateType" minOccurs="0"/>
					<xsd:element name="entityUnderTestList" type="tns:EntityUnderTestList" minOccurs="0"/>
					<xsd:element name="tpDataList" type="tpdata:TerminationPointDataListType" minOccurs="0"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!-- ================ -->
	<xsd:complexType name="TestParameterListType">
		<xsd:annotation>
			<xsd:documentation>
				<p> a list of individual test parameters  and their associated  test parameter values.</p>
				<p> The standard parameter names and valid values are those provided in SD2-22 TestParameters.pdf, and are passed in real-time over the interface upon starting the test. This may be an empty list.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:testParameters" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:element name="testParameters" type="tns:TestParametersType" nillable="true"/>
	<!-- ============== -->
	<xsd:complexType name="TestParametersType">
		<xsd:annotation>
			<xsd:documentation>
				<p>A list of test parameters that are input into the operation</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="testParameter" type="tns:TestParameterType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>The test parameter.</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="testParameterValue" type="tns:TestParameterValueType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>The associated test parameter value</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="vendorExtensions" type="gen:AnyListType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>The specific containment for vendor extensions of the list of test parameters</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:complexType name="TestParameterType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The test configuration parameter. The majority of the attributes below are for when the test parameter is specified in a test specification.</p>
				<p>When specifying over the interface at 'start test' time, minimally the name is required</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" minOccurs="0"/>
			<!-- name of the test parameter -->
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<!-- a short description of the test parameter -->
			<xsd:element name="unique" type="xsd:string" minOccurs="0"/>
			<!--An indicator that specifies if a value is unique for the specification.-->
			<xsd:element name="canBeOveridden" type="xsd:boolean" minOccurs="0"/>
			<!--An indicator whether the parameter can be overridden when passed over the interface.-->
			<xsd:element name="minCardinality" type="xsd:int" minOccurs="0"/>
			<xsd:element name="maxCardinality" type="xsd:int" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:complexType name="TestParameterValueType">
		<xsd:annotation>
			<xsd:documentation>
				<p>Values for given test parameters. The majority of the attributes below are for when the test parameter value is specified in a test specification.</p>
				<p> When specifying over the interface at start test time, minimally the value is required</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="valueType" type="xsd:string" minOccurs="0"/>
			<xsd:element name="default" type="xsd:string" minOccurs="0"/>
			<xsd:element name="value" type="xsd:string" minOccurs="0"/>
			<xsd:element name="unitOfMeasure" type="xsd:string" minOccurs="0"/>
			<xsd:element name="valueFrom" type="xsd:string" minOccurs="0"/>
			<xsd:element name="valueTo" type="xsd:string" minOccurs="0"/>
			<xsd:element name="rangeInterval" type="xsd:string" minOccurs="0"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:complexType name="TestMeasuresListType">
		<xsd:annotation>
			<xsd:documentation>
				<p> a list of individual test measure definitions  and their associated threshold values</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:testMeasure" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:element name="testMeasure" type="tns:TestMeasureType" nillable="true"/>
	<!-- ============== -->
	<xsd:complexType name="TestMeasureType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The test measures.</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" minOccurs="0"/>
			<!-- name of the test measure -->
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<!-- a short description of the test measure -->
			<xsd:element name="unitOfMeasure" type="xsd:string" minOccurs="0"/>
			<!-- the unit of measure-->
			<xsd:element name="captureFrequency" type="xsd:string" minOccurs="0"/>
			<!-- the frequency of collection of the metric -->
			<xsd:element name="capturePeriod" type="tns:TimePeriodType" minOccurs="0"/>
			<!-- the frequency of collection of the metric-->
			<xsd:element name="valueType" type="tns:ValueTypeType" minOccurs="0"/>
			<!-- A kind of value that the test measure value associated with this metric can take on, such as numeric, text, and so forth.-->
			<xsd:element name="thresholdSet" type="tns:ThresholdSetType" minOccurs="0"/>
			<!-- A set of threshold rules.-->
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:complexType name="ThresholdSetType">
		<xsd:annotation>
			<xsd:documentation>
				<p> a set of threshold rules</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element ref="tns:thresholdRules" minOccurs="0" maxOccurs="unbounded"/>
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:element name="thresholdRules" type="tns:ThresholdRulesType" nillable="true"/>
	<!-- ============== -->
	<xsd:complexType name="ThresholdRulesType">
		<xsd:annotation>
			<xsd:documentation>
				<p>Threshold rules determine under what conditions a threshold is considered to have been exceeded</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="name" type="xsd:string" minOccurs="0"/>
			<!-- name of the threshold rule -->
			<xsd:element name="description" type="xsd:string" minOccurs="0"/>
			<!-- a short description of the rule -->
			<xsd:element name="thresholdRuleCondition" type="tns:ThresholdRuleConditionType" minOccurs="0"/>
			<!-- A threshold may have two possible values: "Raise" - a threshold was exceeded or "Clear" - a threshold crossing cleared.-->
			<xsd:element name="thresholdRuleSeverity" type="tns:ThresholdRuleSeverityType" minOccurs="0"/>
			<!-- A threshold can be generated in different severity levels. A crossing for each level may require a different condition and possibly trigger a different consequence. -->
			<!--The supported severity levels are equivalent to the possible severity level of alarms -->
			<xsd:element name="conformanceTargetLower" type="xsd:long" minOccurs="0"/>
			<!-- A value used to determine if the threshold is crossed or ceased to be crossed. It represents the Lower limit.-->
			<xsd:element name="conformanceComparatorLower" type="xsd:string" minOccurs="0"/>
			<!-- An operator that when applied on a value specifies whether a threshold is crossed or ceased to be crossed.-->
			<!--This operator is used to compare with the conformanceTargetLower.-->
			<xsd:element name="conformanceTargetUpper" type="xsd:long" minOccurs="0"/>
			<!-- A value used to determine if the threshold is crossed or ceased to be crossed. It represents the Upper limit.-->
			<xsd:element name="conformanceComparatorUpper" type="xsd:string" minOccurs="0"/>
			<!--This operator is used to compare with the conformanceTargetUpper.-->
			<xsd:element name="conformancePeriod" type="xsd:string" minOccurs="0"/>
			<!--An interval of time during which the conformanceTarget Lower and Upper must be measured..-->
			<xsd:element name="action" type="xsd:string" minOccurs="0"/>
			<!-- recommended action -->
		</xsd:sequence>
	</xsd:complexType>
	<!-- ============== -->
	<xsd:complexType name="TestScheduleType">
		<xsd:annotation>
			<xsd:documentation>
				<p>The test schedule</p>
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="startTimeType" type="tns:TimeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>specifies the type of start type as immediate, fixed, or relative. The default is immediate</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="startTime" type="xsd:dateTime" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>specifies the scheduled start date/time to perform on-demand tests. It has no meaning for proactive tests and thus is not present.</p>
						<p>It is also not relevant for start time type = relative, and thus is not present. The default value for this attribute is the current system date and time if start time type = fixed, but no start time is supplied.</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="relativeStartTime" type="xsd:integer" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>specifies the relative start time, from the current system time, to perform on-demand tests. This attribute has no meaning for proactive tests and thus is not present.</p>
						<p>It is also not relevant when start time type = fixed, and thus is not present.  The default value for this attribute is zero, indicating the current system time, when start time type = relative, but no relative start time is provided.</p>
						<p> The value is in centi-seconds.</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="stopTimeType" type="tns:TimeType" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>specifies the type of stop type as immediate, fixed, or relative. The default is immediate.</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="stopTime" type="xsd:dateTime" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>specifies the scheduled stop  date/time for on-demand tests. It has no meaning for proactive tests and thus is not present.</p>
						<p>It is also not relevant for stop  time type = relative, and thus is not present. The stop date/time value should be greater than or equal to the scheduled start date/time value.</p>
						<p> If stop time type = fixed, but no stop time is present, then this defaults to “forever”</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="relativeStopTime" type="xsd:integer" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>specifies the relative stop time for  on-demand tests. This attribute has no meaning for proactive tests and thus is not present.</p>
						<p>It is also not relevant when start time type = fixed, and thus is not present.</p>
						<p> The default value for this attribute is “forever”, indicating that the test will run until the test is stopped, or fails. The value is in centi-seconds.</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="recurringFrequency" type="xsd:integer" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						<p>specifies a configurable frequency per instance of a test. The frequency can be specified as none or in relative time (e.g., repeat the test every given number of hours, minutes, and seconds from the start time).</p>
						<p>If the relative stop time is forever, then the frequency should be none. If the relative stop time is relative time and the frequency is relative time, then the frequency time should be equal to or greater than the relative stop time.</p>
						<p>The value is in centi-seconds</p>
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
</xsd:schema>
