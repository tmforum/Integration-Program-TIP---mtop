package org.tmforum.lab.mtop;

/*
 * Copyright 2001-2005 The Apache Software Foundation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.apache.maven.plugin.AbstractMojo;
import org.apache.maven.plugin.MojoExecutionException;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.zip.Deflater;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;



/**
 * Goal which zips files into an mTOP package
 *
 * @goal zip-package
 * 
 * @phase package
 */
public class ZipPackage
    extends AbstractMojo {

    /**
     * Location of the file.
     * @parameter expression="${project.build.directory}"
     * @required
     */
    private File outputDirectory;
    
    public void execute()
	throws MojoExecutionException {
	System.out.println("Example of ZIP file creation.");
	
        File f = outputDirectory;
	
        if ( !f.exists() ) {
	    f.mkdirs();
	}
	
        File touch = new File( f, "touch.txt" );
	
        FileWriter w = null;
        try {
	    w = new FileWriter( touch );
	    
	    w.write( "touch.txt" );
	} catch ( IOException e ) {
	    throw new MojoExecutionException( "Error creating file " + touch, e );
	} finally {
	    if ( w != null ) {
		try {
		    w.close();
		} catch ( IOException e ) {
		    // ignore
		}
	    }
	}

	
	// Specify files to be zipped
	String[] filesToZip = new String[3];
	filesToZip[0] = "firstfile.txt";
	filesToZip[1] = "secondfile.txt";
	filesToZip[2] = "/tmp/thirdfile.txt";
	
	byte[] buffer = new byte[18024];
	
	// Specify zip file name
	String zipFileName = "/tmp/example.zip";
	
	try {
	    
	    ZipOutputStream out =
		new ZipOutputStream(new FileOutputStream(zipFileName));
	    
	    // Set the compression ratio
	    out.setLevel(Deflater.DEFAULT_COMPRESSION);
	    
	    // iterate through the array of files, adding each to the zip file
	    for (int i = 0; i < filesToZip.length; i++) {
		System.out.println(i);
		// Associate a file input stream for the current file
		FileInputStream in = new FileInputStream(filesToZip[i]);
		
		// Add ZIP entry to output stream.
		out.putNextEntry(new ZipEntry(filesToZip[i]));
		
		// Transfer bytes from the current file to the ZIP file
		//out.write(buffer, 0, in.read(buffer));
		
		int len;
		while ((len = in.read(buffer)) > 0)
		    {
			out.write(buffer, 0, len);
		    }
		
		
		
		// Close the current entry
		out.closeEntry();
		
		// Close the current file input stream
		in.close();
		
	    }
	    // Close the ZipOutPutStream
	    out.close();
	}
	catch (IllegalArgumentException iae) {
	    iae.printStackTrace();
	}
	catch (FileNotFoundException fnfe) {
	    fnfe.printStackTrace();
	}
	catch (IOException ioe)
	    {
		ioe.printStackTrace();
	    }
	
	
    }
}
